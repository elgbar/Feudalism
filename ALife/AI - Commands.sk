options:
	debug: true	
	entity: villager
	#set to true to get more info
	
command /killmobs <text="help">:
	usage: /killmobs <all|commandspawned|natrualspawned>
	trigger:
		BROADCAST "FIX THIS SHIT!"
		stop
		if arg-1 is "commandspawned" or "cs":
			set {_kill} to true
		else if arg-1 is "naturalspawned" or "ns":
			set {_kill} to false
		else if arg-1 is "help":
			message "usage: /killmobs <all|commandspawned|natrualspawned>"
			stop
		loop all villagers:
			if loop-entity-1's name exists:
				set {_DataName} to entity's name
				if entity's name contains "[<gold>*<r>]<green>":		
					replace all " " and "[<gold>*<r>]<green>" with "" in {_DataName}
				else:
					replace all " " and "<green>" with "" in {_DataName}
				if {_kill} doesn't exist:
					if {AL.mode.%{_DataName}%} doesn't exist:
						kill loop-entity
					else:
						message "<red>Internal error! Please contact a staff member!"
						stop
					remove {_DataName} from {AL.NPC::*}
					delete {AL.rank.%{_DataName}%}	
					delete {AL.mood.%{_DataName}%}
					delete {AL.commandSpawned.%{_DataName}%}
					delete {AL.faction.%{_DataName}%}
					delete {AL.faction.group.Leader.%{_DataName}%}
					delete {AL.faction.squad.%{_DataName}%}
					delete {AL.mode.%{_DataName}%}
				else if {AL.commandSpawned.%{_DataName}%} is {_kill}:
					kill loop-entity
					remove {_DataName} from {AL.NPC::*}
					delete {AL.rank.%{_DataName}%}	
					delete {AL.mood.%{_DataName}%}
					delete {AL.commandSpawned.%{_DataName}%}
					delete {AL.faction.%{_DataName}%}
					delete {AL.faction.group.Leader.%{_DataName}%}
					delete {AL.faction.squad.%{_DataName}%}
					delete {AL.mode.%{_DataName}%}
				else:
					message "<red>Internal error! Please tell a staff member!"
					stop
		message "done"
command /exist <text="help">:
	usage: /exist <name of npc>
	trigger:
		if {AL.rank.%arg-1%} exists:
			message "%arg-1% exists"
		else:
			message "%arg-1% doesn't exist"

command /editor [<text="help">] [<text="help">] [<text>] [<text>] [<text>]:
	description: this is a tool for Minecraft ALife AI engine, do don't use it if have no idea what you're doing :)
	usage: /editor <help|faction|spawnNPC>
	permission: AL.creator
	aliases: /e
	trigger:
		if arg-1 is "help":
			message "<gold>+----- <green>MALife ingame editor <gold>-----+"
			message "+Help: Help screen for the MALife ingame editor"	
			message "+Faction: edit factions"
			message "+spawnNPC: spawn a MALife NPC"
			message "+Node: edit walking nodes"
			stop	
		else if arg-1 is "Faction":
			if arg-2 is "add":
				if arg-3 exists:
					if arg-4 doesn't exist:
						loop {AL.factions::*}:
							if {AL.factions::%loop-index%} is "%arg-3%":
								add 1 to {_loop}
						if {_loop} doesn't exist:
							add "%arg-3%" to {AL.factions::*}
							if "%player's name%" isn't "<none>":
							#No output to the console ^
								message "<green>A new Faction was created with the name: <gold>%arg-3%"	
						else:
							Message "<red>That name is already taken!"
					else:
						message "<red>You cannot have a space in the faction name!"
				else:
					message "usage: /editor faction add <faction name>"
				
			else if arg-2 is "remove":
				if arg-3 exists:
					if arg-3 is "Loner":
						message "<yellow>This faction cannot be removed!"
						stop
					else:
						loop {AL.factions::*}:
							if {AL.factions::%loop-index%} is "%arg-3%":
								add 1 to {_loop}
						if {_loop} is 1:							
							remove "%arg-3%" from {AL.factions::*}
							message "<green>The faction <gold>%arg-3%<green> have now been removed"
						else:
							message "<red>That faction doesn't exist!"
							stop
				else:
					message "usage: /editor faction remove <faction name>"
				
			else if arg-2 is "list":
				if {AL.factions::*} exists:
					message "Faction name: %{AL.factions::*}%"
				else:
					message "You need to add a faction first!"
			else if arg-2 is "help":
				message "<gold>+----- <green>MALife ingame Faction editor <gold>-----+"
				message "+Help: Help screen for the MALife ingame editor"	
				message "+add: add a faction"
				message "+remove: remove a faction"
				message "+list: list all factions"
				message "+clear: removes <b>all<r> factions!"
			else if arg-2 is "clear":
				player is op
				#player's name is "kh498"
				if {clear.%player%} doesn't exist:
					set {clear.%player%} to now
					message "<red>Warning: This <b>WILL<r><red> break the plugin!"
					message "<yellow>Are you sure you want to delete all factions?"
					message "<yellow>To confirm run the command again within 30 seconds"
				else:
					set {_waited} to difference between {clear.%player%} and now
					if {_waited} is less than 30 seconds:
						clear {AL.factions::*}
						delete {clear.%player%}
						message "<red>All factions has been removed! (except 'Loner')"
					else:
						message "<yellow>The time period has expired!"
						message "<yellow>Run the command again!"
						delete {clear.%player%}
		else if arg-1 is "spawnNPC":
			if arg-2 is "help":
				message "<gold>+----- <green>MALife ingame NPC spawner <gold>-----+"
				message "+&aHelp<r>: Help screen for the MALife ingame editor"
				message "+--- &aArgument 1 <gold>Size<r> ---+"
				message "+&aGroup<r>: spawn the NPC in a group of three"
				message "+&aLone<r>: spawn the NPC alone"
				message "+--- &aArgument 2 <gold>Rank <r>---+"
				message "+&aNewbie<r>: Lowest rank, no armour except a leather helmet (with faction colour), wooden or stone sword"
				message "+&aRegular<r>: Leather armour (with faction colour), stone to iron sword"
				message "+&aMaster<r>: Iron armour with leather helmet (with faction colour), iron sword"
				message "+&aExpert<r>: Highest rank, diamond armour with leather helmet (with faction colour), diamond sword"
				message "+--- &aArgument 3 <gold>Faction <r>---+"
				message "+Use <gold>/editor faction list<r> to list the factions"
				stop
			else if arg-2 is "group" or "3":
				set {_AL.size} to 3				
			else if arg-2 is "lone" or "1":
				set {_AL.size} to 1
			else:
				message "<red>That's not a valid number!"
				message "<yellow>Valid numbers: <gold>group(3) or lone(1)"
				stop
			if arg-3 doesn't exist:
				set {_AL.rank} to 2
				message "<yellow>The second argument wasn't set (rank)!"			
			else if arg-3 is "newbie" or "1":
				set {_AL.rank} to 1
			else if arg-3 is "regular" or "2":
				set {_AL.rank} to 2
			else if arg-3 is "master" or "3":
				set {_AL.rank} to 3
			else if arg-3 is "expert" or "4":
				set {_AL.rank} to 4
			else:
				message "<red>That isn't a valid rank!"
				message "<yellow>valid ranks: <gold>newbie, regular, master and expert"
				stop
			if arg-4 doesn't exist:
				#broadcast "doesn't exist (f)"
				loop {AL.factions::*}:
					#broadcast "looping"
					if {AL.factions::%loop-index%} is "Loner":
						add 1 to {_loop}
						#broadcast "%{_loop}%"
				if {_loop} is 1:
					#broadcast "{_loop} = 1"
					set {_AL.Faction} to "Loner"
				else:
					#broadcast "createing faction"
					execute server command "editor faction add Loner"
					set {_AL.Faction} to "Loner"
					message "<red>The Factions 'Loner' has been restored! This faction cannot be removed!"
				message "<yellow>The third argument wasn't set (Faction)!"	
			else if arg-4 exists:
				loop {AL.factions::*}:
					if {AL.factions::%loop-index%} is "%arg-4%":
						add 1 to {_loop}
						if {_loop} is 1:
							set {_AL.Faction} to "%arg-4%" 
							stop loop						
				if {_loop} doesn't exist:
					message "<red>That faction doesn't exist!"
					message "<yellow>use <gold>/editor faction list<yellow> to list the factions"
					stop
				else:
					message "<red>ERROR: Two or more factions of the same name exists!"
					stop
			message "<green>The group size is set to: <gold>%{_AL.size}%"
			message "<green>The rank is set to:<gold> %{_AL.rank}%"
			message "<green>The faction is set to:<gold> %{_AL.faction}%"
			Message "<green>The command completed successfully!"
			set {_loop} to 1
			while {_loop} isn't 0:
				add 1 to {_loopNR}
				set {_loop} to {_loopNR}
				remove {_AL.size} from {_loop}			
				set {_AL.ran1name} to a random element of {AL.firstName::*}
				set {_AL.ran2name} to a random element of {AL.lastName::*}	
				set {_name} to "%{_AL.ran1name}% %{_AL.ran2name}%"
				
				set {_DataName} to {_name}
				replace all " " with "" in {_DataName}
				{@debug} is true:
					message "DN %{_DataName}%"
					message "N %{_name}%"
				
				if {_loopNR} is 1:
					spawn a {@entity} above location of targeted block
					set the name of last spawned entity to "[<gold>*<r>]<green>%{_name}%<r>"
					set {_name} to "%last spawned entity's name%"
					set {AL.faction.group.Leader.%{_DataName}%} to true
					set {_squad} to "%{_DataName}%"
					set {AL.faction.squad.%{_DataName}%} to {_squad}
				else: 
					if {_loopNR} is 2:						
						spawn a {@entity} above south east location of targeted block
					else if {_loopNR} is 3:
						spawn a {@entity} above south west location of targeted block
					else:
						spawn a {@entity} above {_loopNR} south location of targeted block
					set the name of last spawned entity to "<green>%{_name}%<r>"
					set {AL.faction.group.Leader.%{_DataName}%} to false
					set {AL.faction.squad.%{_DataName}%} to {_squad}
				set {AL.faction.%{_DataName}%} to "%{_AL.Faction}%"
				set {AL.mood.%{_DataName}%} to "happy"
				set {AL.commandSpawned.%{_DataName}%} to true
				set {AL.rank.%{_DataName}%} to "%{_AL.rank}%"
				set {AL.mode.%{_DataName}%} to "online"
				add "%{_DataName}%" to {AL.NPC::*}
				
				if {@debug} is true:
					message "l: %{_loop}%, nr %{_loopNR}%"
					message "%{_loopNR}% (%{_DataName}%) <r>- _ran1name: %{_AL.ran1name}%"
					message "%{_loopNR}% (%{_DataName}%) <r>- _ran2name: %{_AL.ran2name}%"
					message "%{_loopNR}% (%{_DataName}%) <r>- _name: %last spawned entity's name%"
					message "%{_loopNR}% (%{_DataName}%) <r>- {AL.NPC::%{_DataName}%}: %{AL.NPC::*}%"
					message "%{_loopNR}% (%{_DataName}%) <r>- {AL.rank.%{_DataName}%}: %{AL.rank.%{_DataName}%}%"					
					message "%{_loopNR}% (%{_DataName}%) <r>- {AL.mood.%{_DataName}%}: %{AL.mood.%{_DataName}%}%"
					message "%{_loopNR}% (%{_DataName}%) <r>- {AL.commandSpawned.%{_DataName}%}: %{AL.commandSpawned.%{_DataName}%}%"
					message "%{_loopNR}% (%{_DataName}%) <r>- {AL.faction.%{_DataName}%}: %{AL.faction.%{_DataName}%}%"
					message "%{_loopNR}% (%{_DataName}%) <r>- {AL.faction.group.Leader.%{_DataName}%}: %{AL.faction.group.Leader.%{_DataName}%}%"
					message "%{_loopNR}% (%{_DataName}%) <r>- {AL.faction.squad.%{_DataName}%}: %{AL.faction.squad.%{_DataName}%}%"
					message "%{_loopNR}% (%{_DataName}%) <r>- {AL.mode.%{_DataName}%}: %{AL.mode.%{_DataName}%}%"
		else if arg-1 is "node":
			if arg-2 is "help":
				message "<gold>+----- <green>MALife ingame Node editor <gold>-----+"
				message "+Help: Help screen for the MALife ingame editor"	
				message "+set: set a node at your location"
				message "+delete: delete a node"
				message "+list: list all nodes"
			else if arg-2 is "set":
				loop blocks in radius 10:
					if {AL.WalkingNode.%loop-block's location%} exists:
						block at loop-block's location is diamond block
						message "it's diamonds here!"
				set {AL.WalkingNode.%player's location%} to player's location
				message "<green>Walking node set at <gold>'%player's location%'"
				if {@debug} is true:
					set {_de} to "%player's location%"
					set block above {_de} to diamond block
			else:
				message "usage: /editor node <set|delete|list>"
		else:
			message "usage: /editor <help|faction|spawnNPC|node>"	
			stop
			