options:
	debug: false
	
	prefix: <gold>[&aFeudalism<gold>]<r>
	debugPrefix: <gold>[<yellow>Debug<gold>]<r>
	
	warn: <gold>[<yellow>WARNING<gold>]:<r>
	err: <gold>[<light red>ERROR<gold>]:<r> #User error (like wrong argument)
	err2: <gold>[<red>ERROR<gold>]:<light red> #Critical error
	
	allowedMobs: zombie, witch or villager
	non-interactiveMobs: villager #Mobs without ID
	You: <light green>%player%<r>:<r>
	
on crop trample:
	cancel event
	
on spawn:
	if entity is not {@allowedMobs}:
		cancel event
		stop
	if entity is {@non-interactiveMobs}:
		wait 1 tick
		name of entity exists
		stop
	wait 5 tick
	set {_ID} to metadata value "ID" of event-entity
	if {_ID} does not exist:
		delete event-entity
		{@debug}:
			message "{@debugPrefix} Unknown Zombie spawned, and killed" to console
	
On Level Change:
	wait 20 tick
	player's level is not equal to {feu.level.%uuid of player%}:
		message "{@warn} Something went wrong! Your level shifted unexpectedly!"
		message "{@warn} %player%'s level just changed unexpectedly" to console
		set player's level to {feu.level.%uuid of player%}
		
on death of player:
	set death message to ""
	#force the player to respawn #TODO fix this
	set {feu.xpBar.%uuid of player%} to level progress of the player
	loop {feu.quest.Crazy_house.bossFighters::*}:
		if uuid of player is equal to {feu.quest.Crazy_house.bossFighters::*}:
			remove uuid of player from {feu.quest.Crazy_house.bossFighters::*}
			#add uuid of player to {feu.quest.Crazy_house.bossFighters.logedOff::*}
			#stop loop
	if size of {feu.quest.Crazy_house.bossFighters::*} is 0:
		execute console command "killLazarus"
		
		
on respawn:
	wait 2 tick
	set player's level to {feu.level.%uuid of player%}
	
	#You loose 5 percent for dying.
	set level progress of the player to {feu.xpBar.%uuid of player%}
	set {_5 percent} to ({feu.currXP.%uuid of player%}/{feu.maxXP.%uuid of player%})*5
	
	execute console command "addxp -%{_5 percent}% %player% false true"
	if {feu.quest.Crazy_house.hasLootedChests.%uuid of player%} is false: 
		teleport player to {feu.quest.Crazy_house.loot}
		stop
	if {feu.quest.Crazy_house.%uuid of player%} is "In progress":
		if {feu.quest.Crazy_house.2.%uuid of player%} is true:
			set {feu.godMode.%uuid of player%} to true
			
			if chance of 50%:
				teleport player to {feu.quest.Crazy_house.roomExit1}
			else:
				teleport player to {feu.quest.Crazy_house.roomExit2}
				
			loop entities in radius 2 around player:
				set {_ID} to metadata value "ID" of loop-entity
				if {feu.fixedspawn.isSpawned.%{_ID}%} exists:
					delete loop-entity
					set {feu.fixedspawn.isSpawned.%{_ID}%} to false
			set {feu.godMode.%uuid of player%} to false
		else if {feu.quest.Crazy_house.3.%uuid of player%} is true: 
			teleport player to {feu.quest.Crazy_house.bossExit1}
		else if {feu.quest.Crazy_house.4.%uuid of player%} is true: 
			teleport player to {feu.quest.Crazy_house.bossExit1}
		else:
			message "{@err} An error occured that caused the player %player% not to spawn at a location when doing quest Crazy_house! If you are a developer please look in \plugins\skript\logs\questdump.log to fix this quick!" to console
			execute console command "dqv crazy_house %player%"
		stop
	if {feu.quest.theThird.%uuid of player%} is "In progress":
		if {feu.quest.theThird.1.%uuid of player%} is true:
			teleport player to {feu.mainSpawn}
		else if {feu.quest.theThird.7.%uuid of player%} is true:
			teleport player to {feu.quest.theThird.sewers}
		else if {feu.quest.theThird.8.%uuid of player%} is true:
			teleport player to {feu.mainSpawn}
		else:
			teleport player to {feu.quest.theThird.SurvivorSpawn}
		stop
		
	#If all fails, or player don't have an quest active
	teleport player to {feu.mainSpawn}
		
on teleport:
	if {feu.quest.Crazy_house.4.%uuid of player%} is true:
		remove uuid of player from {feu.quest.Crazy_house.bossFighters::*}
		
on command:
	cancel event
	if "%command%" is "help":
		if {feu.permission.%uuid of player%} is "feu.op" or "feu.admin":
			message "{@prefix} <green>Use the command /fhelp to see feudalism commands"
			uncancel event
			stop
		execute player command "/f%complete command%" #this translates to /fhelp %arg%
		stop
	else if "%command%" is "god":
		#cancel event
		if "%uuid of player%" is "<none>":
			message "can not enable godmode for the console. IT IS GOD!" to console
			stop
		else if {feu.permission.%uuid of player%} is not "feu.mod", "feu.tech", "feu.admin" or "feu.op":
			message "{@err} You do not have permission for this command!"
			stop
			
		set {feu.godMode.%uuid of player%} to true
		message "{@prefix} Godmode enabled"
		stop
	else if "%command%" is "ungod":
		#cancel event
		set {feu.godMode.%uuid of player%} to false
		message "{@prefix} Godmode disabled"
		stop
	else if "%command%" is "op":
		#cancel event
		if executor is CONSOLE:
			set {feu.permission.<none>} to "feu.op"
			stop
		if {feu.permission.%uuid of player%} is "feu.admin" or "feu.op":
			op player
			message "{@prefix} You are now op!"
		else:
			message "{@err} You do not have permission for this command!"
		stop
	else if {feu.permission.%uuid of player%} is "feu.player" or "feu.mod":
		uncancel event
		if "%name of player%" is "<none>":
			stop
		else if player is op:
			stop
		command is not "help", "fhelp", "stats", "credits","credit" or "showperm":
			message "{@err} You do not have permission for this command!"
			cancel event
	else:
		if {feu.permission.%uuid of player%} is "feu.player", "feu.mod", "feu.tech", "feu.admin" or "feu.op":
			uncancel event
		else:
			log "%executor%'s permission is wrong (%{feu.permission.%uuid of player%}%)" to "players.log"
			set {feu.permission.%uuid of player%} to "feu.player"
on break:
	if {feu.permission.%uuid of player%} is "feu.tech", "feu.admin" or "feu.op":
		stop
	cancel event
	
on place:
	if block is glowstone:
		cancel event
		stop
	else if block is item frame:
		cancel event
		stop
	if {feu.permission.%uuid of player%} is "feu.tech", "feu.admin" or "feu.op":
		stop
	cancel event
	
on drop:
	if lore of event-item is "<light gray>Quest Item" or "<gold>Spawned sword":
		if {feu.permission.%uuid of player%} is "feu.op":
			stop
		message "{@You} This item looks important." to player
		cancel event
	else if event-item is xp orb:
		cancel event
	else if event-item is any sword:
		number of any sword in player's inventory is 0 #this 
		cancel event
		message "{@You} I should not throw away my only sword.." to player
		
on click:
	if target block is anvil, crafting table, furnace, jukebox, chest, ender chest, trapped chest, enchantment table, dispenser, note block or hopper:
		if {feu.permission.%uuid of player%} is not "feu.mod", "feu.tech", "feu.admin" or "feu.op":
			cancel event
			stop
		else if {feu.permission.%uuid of player%} does not exist:
			log "%executor%'s permission is wrong (%{feu.permission.%uuid of player%}%)" to "players.log"
			set {feu.permission.%uuid of player%} to "feu.player"
			cancel event
			stop
	if player is holding a stick named "Debug":
		if player's target exists:
			execute player command "/targetinfo"
		else if target block exists:
			execute player command "/blockInfo"
		else:
			message "{@err} No target block or target entity!"
		cancel event
		stop
	if event-block is any door:
		if {feu.permission.%uuid of player%} is "feu.player":
			if event-block is any wooden door:
				message "{@You} The door is locked. Maybe a button could work..." to player
			cancel event
			
on entity target:
	if entity is xp orb: #They randomly spawn, cant be cancelled
		delete entity
	set {_Victim ID} to metadata value "ID" of entity
	if target is a villager:
		cancel event
		stop
	else if target is not a player:
		if name of target exists:
			cancel event
			stop
	if {feu.canTarget.%{_Victim ID}%} is false:
		cancel event
		{@debug}:
			message "{@debugPrefix} Cancelling target of player" to console
			
On consume:
	cancel event
	#This is a skript/minecraft bug:
	if player's health is max health of player:
		if name of tool contains "Instant Health":
			cancel event
	else if player is holding a potion of: #Skript is broken here
		if name of tool is "Instant Health I":
			add 10 to player's health
		else if name of tool is "Instant Health II":
			add 20 to player's health
		else if name of tool is "Instant Health III":
			add 30 to player's health
		else:
			message "{@warn} %player% is drinking an unknown potion!" to console
		delete player's tool

on item break:
	if event-entity is not a player:
		if event-item is a helmet:
			set {_location} to spawn of "Feudalism_4"
			set {_x} to metadata value "X" of event-entity
			set {_y} to metadata value "Y" of event-entity
			set {_z} to metadata value "Z" of event-entity
			set x coordinate of {_location} to ({_x}) parsed as number
			set y coordinate of {_location} to ({_y}) parsed as number
			set z coordinate of {_location} to ({_z}) parsed as number
			if {feu.fixedspawn.armour.%{_location}%} is "leather":
				equip event-entity with all leather armour
			else if {feu.fixedspawn.armour.%{_location}%} is "chain":
				equip event-entity with all chain armour
			else if {feu.fixedspawn.armour.%{_location}%} is "iron":
				equip event-entity with all iron armour
			else if {feu.fixedspawn.armour.%{_location}%} is "gold":
				equip event-entity with all gold armour	
			else if {feu.fixedspawn.armour.%{_location}%} is "diamond":
				equip event-entity with all diamond armour
			else:
				message "{@err2} Unknown variable in replace item for entities" to console
			message "Unknown variable in replace item for entities" to console
			stop
			
on quit:
	set leave message to ""
	set {feu.godMode.%uuid of player%} to false
	disallow fly for player
	set gamemode of player to adventure
	execute console command "seespawns false %player%"
	set the player's flying speed to 0.1
	
	if {feu.quest.starter.lookingForRing.%uuid of player%} is true:
		add a gold nugget named "<gold><gold>Old gold ring" with lore "<light gray>Quest Item" to player's inventory
		set {feu.quest.starter.lookingForRing.%uuid of player%} to false
				
	loop {feu.quest.Crazy_house.bossFighters::*}:
		if uuid of player is equal to {feu.quest.Crazy_house.bossFighters::%loop-index%}:
			remove uuid of player from {feu.quest.Crazy_house.bossFighters::*}
			add uuid of player to {feu.quest.Crazy_house.bossFighters.logedOff::*}
			stop loop
	wait 1 tick
	if size of {feu.quest.Crazy_house.bossFighters::*} is 0:
		execute console command "killLazarus"
		
		
#
#One liners & cancel events
#
On Item Spawning of any button:
	cancel event
	
#On Item Spawn
#	if {feu.permission.%uuid of player%} is "feu.player":
#		wait 5 tick
#		remove all any buttons from player's inventory

on heal:
	cancel event
	
on zombie break door:
	cancel event
	
on weather change:
	set weather to sun
	
on spread:
	cancel event
	
On Burn:
	cancel event

on ignition:
	cancel event
	
On Fade:
	cancel event
	
On Form:
	cancel event
	
on Explode:
	cancel event
	
on death:
	clear drops
	
on combust:
	entity is zombie
	cancel event
	
On Leaves Decay:
	cancel event
	
on xp spawn:
	clear xp
	cancel event

on hunger meter change:
	set hunger of player to 10
	
on skript stop:
	set {feu.disable.enemies} to true