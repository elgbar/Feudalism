options:
	debug: false
	
	prefix: <gold>[&aFeudalism<gold>]<r>
	debugPrefix: <gold>[<yellow>Debug<gold>]<r>
	
	warn: <gold>[&aFeudalism<gold>] <yellow>WARNING:<light red>
	err: <gold>[&aFeudalism<gold>] <red>ERROR:<light red>
	
	allowedMobs: zombie, witch or villager
	You: <green>%player%<r>:<r>
	
on crop trample:
	cancel event
	
on spawn:	
	if entity isn't {@allowedMobs}:
		cancel event
		stop
	if entity is zombie:
		wait 10 tick
		set {_ID} to metadata value "ID" of event-entity
		if "%{_ID}%" is "<none>":
			delete event-entity
			{@debug} is true:
				message "{@debugPrefix} Unknown Zombie spawned, and killed" to console
on damage:
	if damage cause is fall:
		cancel event 
		stop
	if victim is a player:
		if {feu.godMode.%uuid of victim%} is true:
			cancel event
		
	wait 2 tick
	repair the attacker's tool
	repair attacker's helmet
	repair attacker's chestplate
	repair attacker's legs
	repair attacker's boots
	
On Level Change:
	wait 20 tick
	player's level isn't equal to {feu.level.%uuid of player%}:
		message "{@warn} Something went wrong! Your level shifted unexpectedly!"
		message "{@warn} %player%'s level just changed unexpectedly" to console
		set player's level to {feu.level.%uuid of player%}
		
on death of player:
	set death message to ""
	set {feu.xpBar.%uuid of player%} to level progress of the player
	#if you loose your inventory use the command:
	#/gamerule keepInventory true

on respawn:
	wait 2 tick
	set player's level to {feu.level.%uuid of player%}
	set level progress of the player to {feu.xpBar.%uuid of player%}
	if {feu.quest.Crazy_house.2.%uuid of player%} is true:
		set {_ran1} to a random integer between 0.9 and 2.1
		set {feu.godMode.%uuid of player%} to true
		
		if {_ran1} is 1:
			teleport player to {feu.quest.Crazy_house.roomExit1}
		else:
			teleport player to {feu.quest.Crazy_house.stairs1}
			
		loop entities in radius 3 around player:
			set {_ID} to metadata value "ID" of loop-entity
			if {feu.fixedspawn.isSpawned.%{_ID}%} exists:
				delete loop-entity
				set {feu.fixedspawn.isSpawned.%{_ID}%} to false
		set {feu.godMode.%uuid of player%} to false
		
	else if {feu.quest.Crazy_house.3.%uuid of player%} is true:
		teleport player to {feu.quest.Crazy_house.roomExit1}
	else:
		teleport player to {feu.mainSpawn}
		
on command:
	if "%command%" is "help":
		player is op:
			message "{@prefix} <green>Use the command /fhelp to see feudalism commands"
			stop
		cancel event
		execute player command "/fhelp"
		stop
	else if "%command%" is "god":
		cancel event
		if "%uuid of player%" is "<none>":
			message "Cannot enable godmode for the console. IT IS GOD!" to console
			stop
		if {_console} is true:
			message "{@err} Console cannot use this command!" to console
			stop
		else if {feu.permission.%uuid of player%} isn't "feu.mod", "feu.tech", "feu.admin" or "op":
			message "{@err} You do not have permission for this command!"
			stop
		else if {feu.permission.%uuid of player%} doesn't exist:
			message "{@err} Permission error!"
			set {feu.permission.%uuid of player%} to "feu.player"
			stop
			
		set {feu.godMode.%uuid of player%} to true
		message "{@prefix} Godmode enabled"
		stop
	else if "%command%" is "ungod":
		cancel event
		set {feu.godMode.%uuid of player%} to false
		message "{@prefix} Godmode disabled"
		stop
	else if "%command%" is "op":
		cancel event
		if {feu.permission.%uuid of player%} is "feu.admin" or "op":
			execute console command "op %player%"
		stop
	if {feu.permission.%uuid of player%} is "feu.mod", "feu.tech", "feu.admin" or "op":
		stop
	else:
		if "%name of player%" is "<none>":
			stop
		command is not "help", "fhelp", "pxp", "printExperiencepoints", "stats", "credit" or "showperm":
			message "{@prefix} You cannot execute this command"
			cancel event
	
on break:
	if {feu.permission.%uuid of player%} is "feu.tech", "feu.admin" or "op":
		stop
	cancel event
	
on place:
	if block is glowstone:
		cancel event
		stop
	else if block is item frame:
		cancel event
		stop
	if {feu.permission.%uuid of player%} is "feu.tech", "feu.admin" or "op":
		stop
	cancel event
	
#TODO: Can only drop custom items
	
on leftclick:
	if player is holding a stick named "Debug":
		if player's target exists:
			execute player command "/targetinfo"
		else if target block exists:
			execute player command "/blockInfo"
		else:
			message "No target block or target, plz dont look at teh sky"
		cancel event
		
on rightclick:
	if player is holding a stick named "Debug":
		if player's target exists:
			execute player command "/targetinfo"
		else if target block exists:
			execute player command "/blockInfo"
		else:
			message "No target block or target, plz dont look at teh sky"
		cancel event
		stop
	if event-block is any door:
		if {feu.permission.%uuid of player%} is "feu.player":
			message "{@You} The door is locked. Maybe a button could work..." to player
			cancel event
			
on entity target:
	set {_Victim ID} to metadata value "ID" of entity
	if target is a villager:
		cancel event
		stop
	else if target isn't a player:
		if name of target exists:
			cancel event
			stop
	if {feu.noTarget.%{_Victim ID}%} is true:
		cancel event
		{@debug} is true:
			message "{@debugPrefix} Cancelling target of player" to console
			
On consume:
	cancel event
	#This is a skript/minecraft bug:
	if player is holding a potion of:
		if name of tool is "Instant Health I":
			add 2 to player's health
		else if name of tool is "Instant Health II":
			add 3 to player's health
		else if name of tool is "Instant Health III":
			add 4.5 to player's health
		else:
			message "%player% is drinking an unknown potion!" to console
		delete player's tool

on item break:
	if event-entity isn't a player:
		if event-item is a helmet:
			set {_location} to spawn of "Feudalism_4"
			set {_x} to metadata value "X" of event-entity
			set {_y} to metadata value "Y" of event-entity
			set {_z} to metadata value "Z" of event-entity
			set x coordinate of {_location} to ({_x}) parsed as number
			set y coordinate of {_location} to ({_y}) parsed as number
			set z coordinate of {_location} to ({_z}) parsed as number
			if {feu.fixedspawn.armour.%{_location}%} is "leather":
				equip event-entity with all leather armour
			else if {feu.fixedspawn.armour.%{_location}%} is "chain":
				equip event-entity with all chain armour
			else if {feu.fixedspawn.armour.%{_location}%} is "iron":
				equip event-entity with all iron armour
			else if {feu.fixedspawn.armour.%{_location}%} is "gold":
				equip event-entity with all gold armour	
			else if {feu.fixedspawn.armour.%{_location}%} is "diamond":
				equip event-entity with all diamond armour
			else:
				message "{@err} unknown variable in replace item for entities" to console
			message "Unknown variable in replace item for entities" to console
			stop
			
on quit:
	set leave message to ""
	set {feu.godMode.%uuid of player%} to false
	disallow fly for player
	set gamemode of player to adventure 
#
#One liners & cancel events
#

on heal:
	cancel event
	
on zombie break door:
	cancel event
	
on weather change:
	set weather to sun
	
On Physics:
	if block is dirt or grass:
		cancel event

on spread:
	cancel event
	
On Burn:
	cancel event

on ignition:
	cancel event
	
On Fade:
	cancel event
	
On Form:
	cancel event
	
on Explode:
	cancel event
	
on death:
	clear drops
	
on combust:
	entity is zombie
	cancel event
	
on xp spawn:
	cancel event

on hunger meter change:
	set hunger of player to 10
	
on skript stop:
	set {feu.disable.enemies} to true