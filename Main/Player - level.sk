options:
	debug: false
	
	prefix: <gold>[&aFeudalism<gold>]<r>
	warn: <gold>[&aFeudalism<gold>] <yellow>WARNING:<light red>
	err: <gold>[&aFeudalism<gold>] <red>ERROR:<light red>

#Commands 	
			
command /addXP <number=5> [<player=%player%>]:
	permission: feu.admin
	usage: /addXP <XP gained>
	trigger:
		if arg-1 is greater than 2500:
			message "{@err} You cannot add more than 1000 xp at a time!"
			stop
		message "you just gained %arg-1% xp" to arg-2
		add arg-1 to {feu.currXP.%arg-2%}
		if {feu.currXP.%arg-2%} is greater than {feu.maxXP.%arg-2%}:
			set {_levelUp} to true
		else if {feu.currXP.%arg-2%} is equal to {feu.maxXP.%arg-2%}:
			set {_levelUp} to true
		else:
			set {_levelUp} to false
			
		if {_levelUp} is true:
			set {_fixLvL} to {feu.currXP.%arg-2%} - {feu.maxXP.%arg-2%} 
			message "{_fixLvL}: %{_fixLvL}% | curr: %{feu.currXP.%arg-2%}% | Max: %{feu.maxXP.%arg-2%}%"
			add 1 to {feu.level.%arg-2%}
			set arg-2's level to {feu.level.%arg-2%}
			set {_newMax} to {feu.maxXP.%arg-2%}-{feu.oldMaxXP.%arg-2%}
			set {_newCurr} to {feu.currXP.%arg-2%}-{feu.oldMaxXP.%arg-2%}
			set {_lvlProgress} to {_newCurr}/{_newMax}
			if {_lvlProgress} is 1:
				set the arg-2's level progress to 0
			else if {_lvlProgress} is greater than 1:
				set the arg-2's level progress to 0
			else:
				set the arg-2's level progress to {_lvlProgress}
			set {feu.oldMaxXP.%arg-2%} to {feu.maxXP.%arg-2%}
			set {feu.maxXP.%arg-2%} to floor((({feu.level.%arg-2%}+300*(2^({feu.level.%arg-2%}/10)))/4)+{feu.oldMaxXP.%arg-2%})
			set {feu.currXP.%arg-2%} to {feu.oldMaxXP.%arg-2%}
				
			message "{@prefix}<yellow> You just levelled up!" to arg-2
			loop all players in radius 20 around arg-2:
				message "{@prefix}<b><gold> %arg-2% <yellow>just levelled up!" to loop-player
			{@debug} is true:
				set {_feu.XPtoNextLevel.%arg-2%} to {feu.maxXP.%arg-2%}-{feu.currXP.%arg-2%}	
				message "max: <yellow>%{feu.maxXP.%arg-2%}%"
				message "curr: <yellow>%{feu.currXP.%arg-2%}%"
				message "level: <yellow>%{feu.level.%arg-2%}%"
				message "old max: <yellow>%{feu.oldMaxXP.%arg-2%}%"
				message "And you need <yellow>%{_feu.XPtoNextLevel.%arg-2%}% <r>till next level"
			wait 1 tick
			execute console command "addxp %{_fixLvL}% %arg-2%"
		else:
			if {feu.level.%arg-2%} isn't 1:
				set {_newMax} to {feu.maxXP.%arg-2%}-{feu.oldMaxXP.%arg-2%}
				set {_newCurr} to {feu.currXP.%arg-2%}-{feu.oldMaxXP.%arg-2%}
				set {_temp} to {_newCurr}/{_newMax}		
			else:
				set {_temp} to {feu.currXP.%arg-2%}/{feu.maxXP.%arg-2%}
			set the arg-2's level progress to {_temp}
			{@debug} is true:
				set {_precent} to {_temp}*100
				set {_feu.XPtoNextLevel.%arg-2%} to {feu.maxXP.%arg-2%}-{feu.currXP.%arg-2%}
				message "You're at %{_precent}%%%" to arg-2
				message "And you need %{_feu.XPtoNextLevel.%arg-2%}% till next level" to arg-2

command /stats [<player=%player%>]:
	permission: feu.player
	trigger:
		set {_nextLVL} to {feu.maxXP.%player%}-{feu.currXP.%player%}
		set {_feu.XPtoNextLevel.%player%} to {feu.maxXP.%player%}-{feu.currXP.%player%}
		set {_newMax} to {feu.maxXP.%player%}-{feu.oldMaxXP.%player%}
		set {_newCurr} to {feu.currXP.%player%}-{feu.oldMaxXP.%player%}
		set {_precent} to ({_newCurr}/{_newMax})*100
		message "<gold>--<green>The stats of %arg-1%<gold>--"
		message "Precent: %{_precent}%%%"
		message "Current XP: %{feu.currXP.%player%}%"
		message "Current Level: %{feu.level.%player%}%"
		message "Amount of XP need for next level: %{feu.maxXP.%player%}%"
		message "XP needed for next level: %{_feu.XPtoNextLevel.%arg-1%}%"	
	
#events
	
On Level Change:
	player's level isn't equal to {feu.level.%player%}:
		Message "{@warn} Something went wrong! Your level shifted unexpectedly!"
		message "{@warn} %player%'s level just changed unexpectedly" to console
		set player's level to {feu.level.%player%}	

		
on death of zombie:
	attacker is a player
	set {_victim level} to metadata value "Level" of victim
	set {_Victim ID} to metadata value "ID" of victim
	#message "%{feu.fixedspawn.isSpawned.%{feu.IDtoLocation.%{_victim level}%}%}%" to attacker
	#message "ID: %{_Victim ID}% | Lvl: %{_victim level}%" to attacker
	if "%{_victim level}%" is equal to "<none>":
		add 1 to {feu.currXP.%attacker%}
		{@debug} is true:
			message "{@warn} Zombie at %attacker's location% isn't a custom spawned zombie. ID: %{_Victim ID}%" to attacker
			message "{@prefix} You gained <light green>1<r> xp" to attacker
	else:
		set {_victim level} to "%{_victim level}%" parsed as a number
		set {_xp} to floor(1+{_victim level}^1.1)
		add {_xp} to {feu.currXP.%attacker%}
		{@debug} is true:
			message "{@prefix} You gained <light green>%{_xp}%<r> xp" to attacker
			
		if 	"%{_victim ID}%" is equal to "<none>":
			Message "{@warn} Didn't find any ID on the zombie." to attacker
		else:			
			if {feu.fixedspawn.isSpawned.%{_Victim ID}%} exists:
				set {feu.fixedspawn.isSpawned.%{_Victim ID}%} to false
			else:
				message "{@err} Couldn't find any variable!" to attacker
		if {feu.quest.starter.house1.zombiesKilled.%player%} exists:
			if {feu.quest.starter.house1.zombiesKilled.%player%} is less than 5:
				add 1 to {feu.quest.starter.house1.zombiesKilled.%player%}
				
	if {feu.currXP.%attacker%} is greater than {feu.maxXP.%attacker%}:
		set {_levelUp} to true
	else if {feu.currXP.%attacker%} is equal to {feu.maxXP.%attacker%}:
		set {_levelUp} to true
	else:
		set {_levelUp} to false
			
	if {_levelUp} is true:
		#level up the player
		add 1 to {feu.level.%attacker%}
		message "variable: %{feu.level.%attacker%}% | Bar: %attacker's level%"
		set attacker's level to {feu.level.%attacker%}
		
		#reset the percentage bar of the player
		set {_newMax} to {feu.maxXP.%attacker%}-{feu.oldMaxXP.%attacker%}
		set {_newMax} to {feu.maxXP.%attacker%}-{feu.oldMaxXP.%attacker%}
		set {_newCurr} to {feu.currXP.%attacker%}-{feu.oldMaxXP.%attacker%}
		set {_lvlProgress} to {_newCurr}/{_newMax}	
		if {_lvlProgress} is 1:
			set the attacker's level progress to 0
		else if {_lvlProgress} is greater than 1:
			set the attacker's level progress to 0
		else:
			set the attacker's level progress to {_lvlProgress}
		
		#This makes use the xp is what it is supposed to be (if you f.eks have too much xp)
		set {feu.oldMaxXP.%attacker%} to {feu.maxXP.%attacker%}
		
		#This calculates how much xp need till next level
		set {feu.maxXP.%attacker%} to floor((({feu.level.%attacker%}+300*(2^({feu.level.%attacker%}/10)))/4)+{feu.oldMaxXP.%attacker%})
		
		set {feu.currXP.%attacker%} to {feu.oldMaxXP.%attacker%}
		
		#says to all players in radius set that the player levelled up
		message "{@prefix}<yellow> You just levelled up!" to attacker
		loop all players in radius 20 around player:
			message "{@prefix}<b><gold> %attacker% <yellow>just levelled up!" to loop-player
		#debug stuff that reports stats 
		{@debug} is true:
			set {_feu.XPtoNextLevel.%player%} to {feu.maxXP.%player%}-{feu.currXP.%player%}	
			message "max: <yellow>%{feu.maxXP.%attacker%}%"
			message "curr: <yellow>%{feu.currXP.%attacker%}%"
			message "level: <yellow>%{feu.level.%attacker%}%"
			message "old max: <yellow>%{feu.oldMaxXP.%attacker%}%"
			message "And you need <yellow>%{_feu.XPtoNextLevel.%attacker%}% <r>till next level"
		execute console command "addxp %{_fixLvL}% %attacker%"
	else:
		if {feu.level.%attacker%} isn't 1:
			set {_newMax} to {feu.maxXP.%attacker%}-{feu.oldMaxXP.%attacker%}
			set {_newCurr} to {feu.currXP.%attacker%}-{feu.oldMaxXP.%attacker%}
			set {_lvlProgress} to {_newCurr}/{_newMax}		
		else:
			set {_lvlProgress} to {feu.currXP.%attacker%}/{feu.maxXP.%attacker%}
		set the attacker's level progress to {_lvlProgress}
		{@debug} is true:
			set {_precent} to {_temp}*100
			message "You're at %{_precent}%%%"
			Message "And you need %{_feu.XPtoNextLevel.%attacker%}% till next level"
	

		