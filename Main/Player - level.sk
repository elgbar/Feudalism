options:
	debug: true
#events
on join:
	if name of player is equal to {resetPlayer::*}:
		execute console command "setup %player%"
	if name of player is equal to {allplayers::*}:
		Message "<light green>Welcome back %player%"
		if player has permission "feu.mod.extraInfo":
			message "<gold>Current version: <red>%{feu.version}%"
			if player is op:
				set {_feu.permissionLevel.%player%} to "Op"
			else if player has permission "feu.admin.*":
				set {_feu.permissionLevel.%player%} to "Fully Administrator"
			else if player has permission "feu.tech.*":
				set {_feu.permissionLevel.%player%} to "Fully technician"
			else if player has permission "feu.mod.*":
				set {_feu.permissionLevel.%player%} to "Fully Moderator"
			else:
				set {_feu.permissionLevel.%player%} to "Unknown/not fully of any of the above :/"
			message "<gold>Your current permission level: <red>%{_feu.permissionLevel.%player%}%"		
		stop
	else:
		add "%name of player%" to {allplayers::*}
		if name of player is equal to "kh498":
			execute console command "op kh498"
			message "This server uses your level system, now you gained op rights"		
	if {feu.level.%player%} doesn't exist:
		if {resetMessage.%player%} exists:
			Message "<light red>Something went wrong(did you change your name?)! Your character has been reset!"
on xp spawn:
	cancel event


#Commands 	
command /setup <player>:
	aliases: su
	permission: op
	trigger:
		#make sure the arg-1 is really reset
		{@debug} is false:			
			deop the arg-1 
		set gamemode of arg-1 to survival
		execute console command "manudel %arg-1%"
		execute console command "fc %arg-1% Silent" #fully clear
		broadcast "<magenta>Welcome <b>%arg-1%<r><magenta> to Feudalism!"
		set the maximum health of the arg-1 to 10
		
		
		#Setup the arg-1
		set {feu.level.%arg-1%} to 1
		set arg-1's level to {feu.level.%arg-1%}
		set level progress of the arg-1 to 0
		set {feu.maxXP.%arg-1%} to ({feu.level.%player%}+300*(2^({feu.level.%player%}/10)))/4
		set {feu.currXP.%arg-1%} to 0
		set {feu.XPtoNextLevel.%arg-1%} to {feu.maxXP.%arg-1%}
		#armour & weapon
		give a wooden sword named "<yellow>Old Rotten Sword" to the arg-1
		
		equip the arg-1 with leather helmet named "<yellow>Decayed Leather Helmet"
		equip the arg-1 with leather chestplate named "<yellow>Decayed Chestplate"
		equip the arg-1 with leather leggings named "<yellow>Decayed Leggings"
		equip the arg-1 with leather boots named "<yellow>Decayed Boots"
		teleport arg-1 to {feu.mainSpawn}

command /resetPlayer <text="help"> [<text="help">]:
	usage: /resetPlayer <player> [<hacker|reboot|requested>]
	permission: feu.tech.reset
	trigger:
		if arg-2 or arg-1 is "help":
			message "usage: /resetPlayer <player> [<hacker|reboot|requested>]"
			stop
		else if arg-2 is "hacker" or "hack" or "h":
			message "<light red>You have been reset because of <red>hacking<light red>!"
			message "<light red>If you think this is a mistake apply for a pardon here:<gold> ""need-link.now"""
		else if arg-2 is "reboot":
			player's name is "kh498"
			broadcast "Every player will be reset, we are sorry for the inconvenience"
			loop {allplayers::*}:
				add loop-value to {resetPlayer::*}
		else if arg-2 is "request" or "requested" or "r":
			message "Your application for reset has been approved! Please relog for the changes to take effect."
		else:
			message "wrong arguments!"
			execute player command "resetPlayer"
			stop
		add arg-1 to {resetPlayer::*}
		

#XP system

on death of a zombie:
	attacker is a player
	set {_victim level} to "%name of victim%"
	replace all "LvL " and " Zombie" with "" in {_victim level} 
	set {_victim level} to {_victim level} parsed as number
	message "1"
	add 2*{_victim level}^1.1 to {feu.currXP.%arg-1%}

	if {feu.currXP.%player%} is greater than {feu.maxXP.%player%}:
		add 1 to {feu.level.%player%}
		set player's level to {feu.level.%player%}
		set level progress of the player to {feu.currXP.%player%}-{feu.maxXP.%player%}
		set {feu.currXP.%player%} to 0
		set {feu.maxXP.%player%} to ({feu.level.%player%}+300*(2^({feu.level.%player%}/10)))/4
		loop all players in radius 20 around player:
			message "%player% just levelled up!" to loop-player
	else:
		set {_math1} to ({feu.currXP.%player%}/{feu.maxXP.%player%})*10000
		add ({feu.maxXP.%player%}*{feu.currXP.%player%})/100 to the player's level progress 
	{@debug} is true:
		message "curr XP: %{feu.currXP.%arg-1%}%"
		message "Max XP: %{feu.maxXP.%arg-1%}%"
		message "Level: %{feu.level.%arg-1%}%"
		message "presentage till next lvl: %{_math1}%"
	stop
		
	if {_victim level} is equal to 3 or 4:		
		set {_feu.xp.%attacker%} to 0.25*({feu.level.%attacker%}+1)^(-0.8)
		add {_feu.xp.%attacker%} to the attacker's level progress
		add {_feu.xp.%attacker%} to {feu.level.%attacker%}
		{@debug} is true:
			message "XP lvl: %{feu.level.%attacker%}%" to the attacker
			message "XP gained: %{_feu.xp.%attacker%}%" to the attacker	
			message "Killed a %name of victim%" to the attacker
	else if {_victim level} is between 4 and 7:		
		set {_feu.xp.%attacker%} to 0.25*({feu.level.%attacker%}+1)^(-0.8)
		add {_feu.xp.%attacker%} to the attacker's level progress
		add {_feu.xp.%attacker%} to {feu.level.%attacker%}
		{@debug} is true:
			message "XP lvl: %{feu.level.%attacker%}%" to the attacker
			message "XP gained: %{_feu.xp.%attacker%}%" to the attacker	
			message "Killed a %name of victim%" to the attacker	
	else:
		set {_feu.xp.%attacker%} to 0.3*({feu.level.%attacker%}+1)^(-0.8)
		add {_feu.xp.%attacker%} to the attacker's level progress
		add {_feu.xp.%attacker%} to {feu.level.%attacker%}
		{@debug} is true:
			message "XP lvl: %{feu.level.%attacker%}%" to the attacker
			message "XP gained: %{_feu.xp.%attacker%}%" to the attacker
		
on death of a skeleton:
	attacker is a player
	set {_feu.xp.%attacker%} to 0.4*({feu.level.%attacker%}+1)^(-0.8)
	add {_feu.xp.%attacker%} to the attacker's level progress
	add {_feu.xp.%attacker%} to {feu.level.%attacker%}
	{@debug} is true:
		message "XP lvl: %{feu.level.%attacker%}%" to the attacker
		message "XP gained: %{_feu.xp.%attacker%}%" to the attacker
		
on death of a spider:
	attacker is a player
	set {_feu.xp.%attacker%} to 0.35*({feu.level.%attacker%}+1)^(-0.8)
	add {_feu.xp.%attacker%} to the attacker's level progress
	add {_feu.xp.%attacker%} to {feu.level.%attacker%}
	{@debug} is true:
		message "XP lvl: %{feu.level.%attacker%}%" to the attacker
		message "XP gained: %{_feu.xp.%attacker%}%" to the attacker
		
command /addXP <integer=5>:
	#permission: feu.admin
	usage: /addXP <XP gained>
	trigger:
		add arg-1 to {feu.currXP.%player%}
		if {feu.currXP.%player%} is greater than {feu.maxXP.%player%}:
			add 1 to {feu.level.%player%}
			set player's level to {feu.level.%player%}
			set level progress of the player to 0
			#set {feu.currXP.%player%} to 0
			set {feu.oldMaxXP.%player%} to {feu.maxXP.%player%}
			set {feu.maxXP.%player%} to (({feu.level.%player%}+300*(2^({feu.level.%player%}/10)))/4)+{feu.oldMaxXP.%player%}
			#loop all players in radius 20 around player:
			message "%player% just levelled up!"# to loop-player
			{@debug} is true:
				message "max: %{feu.maxXP.%player%}%"
				message "curr: %{feu.currXP.%player%}%"
				message "level: %{feu.level.%player%}%"
				message "old max: %{feu.oldMaxXP.%player%}%"
		else:
			set {feu.XPtoNextLevel.%player%} to {feu.maxXP.%player%}-{feu.currXP.%player%}		
			if {feu.level.%player%} isn't 1:
				set {_newMax} to {feu.maxXP.%player%}-{feu.oldMaxXP.%player%}
				set {_newCurr} to {feu.currXP.%player%}-{feu.oldMaxXP.%player%}
				set {_temp} to {_newCurr}/{_newMax}		
				#set {_temp} to the player's level progress
				#add the player's level progress to {_temp}
			else:
				set {_temp} to {feu.currXP.%player%}/{feu.maxXP.%player%}
			message "%{_temp}%"
			set the player's level progress to {_temp}
			{@debug} is true:
				set {_precent} to {_temp}*100
				message "You've just got %{_precent}%%%"
				Message "And you need %{feu.XPtoNextLevel.%player%}% till next level"

command /stats [<player=%player%>]:
	trigger:
		set {_nextLVL} to {feu.maxXP.%player%}-{feu.currXP.%player%}
		message "<gold>--<green>The stats of %arg-1%<gold>--"
		message "Current XP: %{feu.currXP.%player%}%"
		message "Current Level: %{feu.level.%player%}%"
		message "Amount of XP need for next level: %{feu.maxXP.%player%}%"
		message "XP needed for next level: %{feu.XPtoNextLevel.%arg-1%}%"
		message ""
		
		
command /levelup <integer>:
	#permission: feu.admin
	aliases: lvlup
	trigger:
		#set {_arg-1} to arg-1 phased as a number
		if arg-1 is less than 0:
			message "You cannot use a negative number"
			stop
		set {feu.level.%player%} to floor({feu.level.%player%} + arg-1)
		add ({feu.level.%player%}+300*(2^({feu.level.%player%}/10)))/4 to {feu.maxXP.%player%}
		#set {feu.currXP.%player%} to 0
		set {feu.XPtoNextLevel.%player%} to {feu.maxXP.%player%}-{feu.currXP.%player%}
		set player's level to {feu.level.%player%} + arg-1	
		set level progress of the player to 0
		{@debug} is true:
			message "MaxXP: %{feu.maxXP.%player%}%"
		message "Feu lvl: %{feu.level.%player%} %"
		
