options:
	debug: false
	
	prefix: <gold>[&aFeudalism<gold>]<r>
	debugPrefix: <gold>[<yellow>Debug<gold>]<r>
	
	warn: <gold>[&aFeudalism<gold>] <yellow>WARNING:<light red>
	err: <gold>[&aFeudalism<gold>] <red>ERROR:<light red>
	
#Commands 	
						#arg-3: print the amount of xp gained #arg-4: Silent level up = true
command /addXP <number> [<player=%player%>] [<boolean=true>] [<boolean=false>]:
	usage: /addXP <XP> [<player>]
	trigger:
		if "%name of player%" is "<none>":
			set {_console} to true
		if {_console} is true:
			message "" to player
		else if {feu.permission.%name of player%} isn't "feu.admin" or "op":
			message "{@err} You do not have permission for this command!"
			stop
		else if {feu.permission.%name of player%} doesn't exist:
			message "{@err} Permission error!"
			set {feu.permission.%name of player%} to "feu.player"
			stop
			
		if arg-1 is greater than 2500:
			message "{@err} You cannot add more than 2500 xp at a time!"
			stop
			
		if arg-3 is true:
			message "{@prefix} you just gained %arg-1% xp" to arg-2
		add arg-1 to {feu.currXP.%arg-2%}
		
		if {feu.currXP.%arg-2%} is greater than {feu.maxXP.%arg-2%}:
			set {_levelUp} to true
		else if {feu.currXP.%arg-2%} is equal to {feu.maxXP.%arg-2%}:
			set {_levelUp} to true
		else:
			set {_levelUp} to false
			
		if {_levelUp} is true:
			set {_fixLvL} to {feu.currXP.%arg-2%} - {feu.maxXP.%arg-2%} 
			add 1 to {feu.level.%arg-2%}
			set arg-2's level to {feu.level.%arg-2%}
			set {_newMax} to {feu.maxXP.%arg-2%}-{feu.oldMaxXP.%arg-2%}
			set {_newCurr} to {feu.currXP.%arg-2%}-{feu.oldMaxXP.%arg-2%}
			set {_lvlProgress} to {_newCurr}/{_newMax}
			
			if {_lvlProgress} is 1:
				set the arg-2's level progress to 0
			else if {_lvlProgress} is greater than 1:
				set the arg-2's level progress to 0
			else:
				set the arg-2's level progress to {_lvlProgress}
				
			set {feu.oldMaxXP.%arg-2%} to {feu.maxXP.%arg-2%}
			set {feu.maxXP.%arg-2%} to floor((({feu.level.%arg-2%}+300*(2^({feu.level.%arg-2%}/10)))/4)+{feu.oldMaxXP.%arg-2%})
			set {feu.currXP.%arg-2%} to {feu.oldMaxXP.%arg-2%}
			if arg-4 is false:
				message "{@prefix}<yellow> You just levelled up!" to arg-2
				loop all players in radius 20 around arg-2:
					message "{@prefix}<b><gold> %arg-2% <yellow>just levelled up!" to loop-player
			{@debug} is true:
				message "{@debugPrefix} {_fixLvL}: %{_fixLvL}% | curr: %{feu.currXP.%arg-2%}% | Max: %{feu.maxXP.%arg-2%}%"
				set {_feu.XPtoNextLevel.%arg-2%} to {feu.maxXP.%arg-2%}-{feu.currXP.%arg-2%}	
				message "{@debugPrefix} max: <yellow>%{feu.maxXP.%arg-2%}%"
				message "{@debugPrefix} curr: <yellow>%{feu.currXP.%arg-2%}%"
				message "{@debugPrefix} level: <yellow>%{feu.level.%arg-2%}%"
				message "{@debugPrefix} old max: <yellow>%{feu.oldMaxXP.%arg-2%}%"
				message "{@debugPrefix} And you need <yellow>%{_feu.XPtoNextLevel.%arg-2%}% <r>till next level"
			wait 1 tick
			execute console command "addxp %{_fixLvL}% %name of player% false true"
		else:
			if {feu.level.%arg-2%} isn't 1:
				set {_newMax} to {feu.maxXP.%arg-2%}-{feu.oldMaxXP.%arg-2%}
				set {_newCurr} to {feu.currXP.%arg-2%}-{feu.oldMaxXP.%arg-2%}
				set {_temp} to {_newCurr}/{_newMax}		
			else:
				set {_temp} to {feu.currXP.%arg-2%}/{feu.maxXP.%arg-2%}
			set the arg-2's level progress to {_temp}
			{@debug} is true:
				set {_percent} to {_temp}*100
				set {_feu.XPtoNextLevel.%arg-2%} to {feu.maxXP.%arg-2%}-{feu.currXP.%arg-2%}
				message "{@debugPrefix} You're at %{_percent}%%%" to arg-2
				message "{@debugPrefix} And you need %{_feu.XPtoNextLevel.%arg-2%}% till next level" to arg-2

command /stats [<player=%player%>]:
	trigger:
		set {_nextLVL} to {feu.maxXP.%arg-1%}-{feu.currXP.%arg-1%}
		set {_XPtoNextLevel} to {feu.maxXP.%arg-1%}-{feu.currXP.%arg-1%}
		if {feu.level.%arg-1%} isn't 1:
			set {_newMax} to {feu.maxXP.%arg-1%}-{feu.oldMaxXP.%arg-1%}
			set {_newCurr} to {feu.currXP.%arg-1%}-{feu.oldMaxXP.%arg-1%}
			set {_percent} to {_newCurr}/{_newMax}*100	
		else:
			set {_percent} to {feu.currXP.%arg-1%}/{feu.maxXP.%arg-1%}*100
		message "<gold>--<green>The stats of %arg-1%<gold>--"
		if {feu.currXP.%arg-1%} is 0:
			message "Percent: 0%%"
		else:
			message "Percent: %{_percent}%%%"
		message "Current XP: %{feu.currXP.%arg-1%}%"
		message "Current Level: %{feu.level.%arg-1%}%"
		message "XP needed for next level: %{_XPtoNextLevel}%"	
#events
		
on death of zombie:
	#make this use the addxp command
	attacker is a player
	set {_victim level} to metadata value "Level" of victim
	set {_Victim ID} to metadata value "ID" of victim
	#message "%{feu.fixedspawn.isSpawned.%{feu.IDtoLocation.%{_victim level}%}%}%" to attacker
	#message "ID: %{_Victim ID}% | Lvl: %{_victim level}%" to attacker
	if "%{_victim level}%" is equal to "<none>":
		add 1 to {feu.currXP.%name of attacker%}
		{@debug} is true:
			message "{@warn} Zombie at %attacker's location% isn't a custom spawned zombie. ID: %{_Victim ID}%" to attacker
			message "{@prefix} You gained <light green>1<r> xp" to attacker
	else:
		set {_victim level} to "%{_victim level}%" parsed as a number
		set {_xp} to floor(1+{_victim level}^1.1)
		add {_xp} to {feu.currXP.%name of attacker%}
		
		if {feu.printXP.%name of attacker%} is true:
			message "{@prefix} You gained <light green>%{_xp}%<r> xp" to attacker
			
		if 	"%{_victim ID}%" is equal to "<none>":
			Message "{@warn} Didn't find any ID on the zombie." to attacker
		else:			
			if {feu.fixedspawn.isSpawned.%{_Victim ID}%} exists:
				set {feu.fixedspawn.isSpawned.%{_Victim ID}%} to false
			else if {_Victim ID} is "SCZ":
				#ignore this, just a cheap hack... so zombies can spawn without being spawned from skript
				message ""
			else:
				message "{@err} Couldn't find any variable!" to attacker
		#		
		# Quests:		
		#		
		
		if {feu.quest.starter.doorAThouse1.%name of attacker%} is true:
			if {feu.quest.zombiesKilled.%name of attacker%} is less than 6:
				add 1 to {feu.quest.zombiesKilled.%name of attacker%}
			
		else if {feu.quest.Crazy_house.3.%name of attacker%} is true:
			#message "%{feu.quest.zombiesKilled.%name of attacker%}%" to attacker
			if {feu.quest.zombiesKilled.%name of attacker%} is 10:
				set {feu.quest.Crazy_house.3.%name of attacker%} to false 
				set {feu.quest.Crazy_house.4.%name of attacker%} to true
				message "<light red>???<r>: Great, you seem stronger than the other peasants!" to attacker
				message "<light red>???<r>: Now run to the next room." to attacker
			else:
				add 1 to {feu.quest.zombiesKilled.%name of attacker%}	
				
	if {feu.currXP.%name of attacker%} is greater than {feu.maxXP.%name of attacker%}:
		set {_levelUp} to true
	else if {feu.currXP.%name of attacker%} is equal to {feu.maxXP.%name of attacker%}:
		set {_levelUp} to true
	else:
		set {_levelUp} to false

	if {_levelUp} is true:
		#level up the player
		add 1 to {feu.level.%name of attacker%}
		message "variable: %{feu.level.%name of attacker%}% | Bar: %attacker's level%"
		set attacker's level to {feu.level.%name of attacker%}
		
		#reset the percentage bar of the player
		set {_newMax} to {feu.maxXP.%name of attacker%}-{feu.oldMaxXP.%name of attacker%}
		set {_newMax} to {feu.maxXP.%name of attacker%}-{feu.oldMaxXP.%name of attacker%}
		set {_newCurr} to {feu.currXP.%name of attacker%}-{feu.oldMaxXP.%name of attacker%}
		set {_lvlProgress} to {_newCurr}/{_newMax}	
		if {_lvlProgress} is 1:
			set the attacker's level progress to 0
		else if {_lvlProgress} is greater than 1:
			set the attacker's level progress to 0
		else:
			set the attacker's level progress to {_lvlProgress}
		
		#This makes use the xp is what it is supposed to be (if you f.eks have too much xp)
		set {feu.oldMaxXP.%name of attacker%} to {feu.maxXP.%name of attacker%}
		
		#This calculates how much xp need till next level
		set {feu.maxXP.%name of attacker%} to floor((({feu.level.%name of attacker%}+300*(2^({feu.level.%name of attacker%}/10)))/4)+{feu.oldMaxXP.%name of attacker%})
		
		set {feu.currXP.%name of attacker%} to {feu.oldMaxXP.%name of attacker%}
		
		#says to all players in radius set that the player levelled up
		message "{@prefix}<yellow> You just levelled up!" to attacker
		loop all players in radius 20 around attacker:
			message "{@prefix}<b><gold> %name of attacker% <yellow>just levelled up!" to loop-player
		#debug stuff that reports stats 
		{@debug} is true:
			set {_feu.XPtoNextLevel.%name of attacker%} to {feu.maxXP.%name of attacker%}-{feu.currXP.%name of attacker%}	
			message "{@debugPrefix} max: <yellow>%{feu.maxXP.%name of attacker%}%"
			message "{@debugPrefix} curr: <yellow>%{feu.currXP.%name of attacker%}%"
			message "{@debugPrefix} level: <yellow>%{feu.level.%name of attacker%}%"
			message "{@debugPrefix} old max: <yellow>%{feu.oldMaxXP.%name of attacker%}%"
			message "{@debugPrefix} And you need <yellow>%{_feu.XPtoNextLevel.%name of attacker%}% <r>till next level"
		if {_fixLvL} is greater than 0:
			execute console command "addxp %{_fixLvL}% %name of attacker% false true"
	else:
		if {feu.level.%name of attacker%} isn't 1:
			set {_newMax} to {feu.maxXP.%name of attacker%}-{feu.oldMaxXP.%name of attacker%}
			set {_newCurr} to {feu.currXP.%name of attacker%}-{feu.oldMaxXP.%name of attacker%}
			set {_lvlProgress} to {_newCurr}/{_newMax}		
		else:
			set {_lvlProgress} to {feu.currXP.%name of attacker%}/{feu.maxXP.%name of attacker%}
		set the attacker's level progress to {_lvlProgress}
		{@debug} is true:
			set {_percent} to {_temp}*100
			message "{@debugPrefix} You're at %{_percent}%%%"
			message "{@debugPrefix} And you need %{_feu.XPtoNextLevel.%name of attacker%}% till next level"
	

		