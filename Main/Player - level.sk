options:
	debug: false

	prefix: <gold>[&aFeudalism<gold>]<r>
	debugPrefix: <gold>[<yellow>Debug<gold>]<r>

	warn: <gold>[<yellow>WARNING<gold>]:<r>
	err: <gold>[<light red>ERROR<gold>]:<r> #User error (like wrong argument)
	err2: <gold>[<red>ERROR<gold>]:<light red> #Critical error

#Commands

command /addXP <number> [<player=%player%>] [<boolean=true>] [<boolean=false>]:
	usage: /addXP <XP> [<player>] #arg-3: print the amount of xp gained #arg-4: Silent = true
	trigger:
		if {feu.permission.%uuid of player%} is not "feu.op":
			message "{@err} You do not have permission for this command!"
			stop
		else if {feu.permission.%uuid of player%} does not exist:
			message "{@err2} You need to have a permission"
			log "%executor%'s permission is wrong (%{feu.permission.%uuid of player%}%)" to "players.log"
			set {feu.permission.%uuid of player%} to "feu.player"
			stop

		if arg-1 is greater than 2500:
			message "{@err} You can not add more than 2500 xp at a time!"
			stop

		set {_arg-1} to arg-1
		#add {_arg-1} to {feu.currXP.%uuid of arg-2%}
		if {_arg-1} + {feu.currXP.%uuid of arg-2%} is less than {feu.oldMaxXP.%uuid of arg-2%}:
			#makes it remove all the xp you can without levelling down
			set {_arg-1} to ({feu.currXP.%uuid of arg-2%} - {feu.oldMaxXP.%uuid of arg-2%}) * -1
			if arg-4 is false:
				message "{@warn} You cannot remove that much xp"

		else if {_arg-1} + {feu.currXP.%uuid of arg-2%} is {feu.oldMaxXP.%uuid of arg-2%}:
			set {_arg-1} to ({feu.currXP.%uuid of arg-2%} - {feu.oldMaxXP.%uuid of arg-2%}) * -1
			if arg-4 is false:
				message "{@warn} You cannot remove that much xp"

		add {_arg-1} to {feu.currXP.%uuid of arg-2%}

		if {feu.currXP.%uuid of arg-2%} is greater than {feu.maxXP.%uuid of arg-2%}:
			set {_levelUp} to true
		else if {feu.currXP.%uuid of arg-2%} is equal to {feu.maxXP.%uuid of arg-2%}:
			set {_levelUp} to true
		else:
			set {_levelUp} to false

		if {_levelUp} is true:
			set {_fixLvL} to {feu.currXP.%uuid of arg-2%} - {feu.maxXP.%uuid of arg-2%}
			add 1 to {feu.level.%uuid of arg-2%}
			set arg-2's level to {feu.level.%uuid of arg-2%}
			set {_newMax} to {feu.maxXP.%uuid of arg-2%}-{feu.oldMaxXP.%uuid of arg-2%}
			set {_newCurr} to {feu.currXP.%uuid of arg-2%}-{feu.oldMaxXP.%uuid of arg-2%}
			set {_lvlProgress} to {_newCurr}/{_newMax}

			if {_lvlProgress} is 1:
				set the arg-2's level progress to 0
			else if {_lvlProgress} is greater than 1:
				set the arg-2's level progress to 0
			else:
				set the arg-2's level progress to {_lvlProgress}

			set {feu.oldMaxXP.%uuid of arg-2%} to {feu.maxXP.%uuid of arg-2%}
			set {feu.maxXP.%uuid of arg-2%} to round((({feu.level.%uuid of arg-2%}+300*(2^({feu.level.%uuid of arg-2%}/7)))/4)+{feu.oldMaxXP.%uuid of arg-2%})
			set {feu.currXP.%uuid of arg-2%} to {feu.oldMaxXP.%uuid of arg-2%}
			if arg-4 is false:
				#TODO: fixed displays wrong level when levelling up multiple times
				#message "{@prefix} <yellow>You Gained A Level!" to arg-2
				#send arg-2 title "<yellow>Level up!" with subtitle "<light gray>To LvL %{feu.level.%uuid of arg-2%}%" for 3 seconds
				send arg-2 title "<yellow>Level up!" with subtitle "" for 3 seconds
				loop all players in radius 20 around arg-2:
					message "{@prefix}<gold> <b>%arg-2% <yellow>just levelled up!" to loop-player
			execute console command "setMaxHealth %arg-2%"
			{@debug}:
				set {_feu.XPtoNextLevel.%uuid of arg-2%} to {feu.maxXP.%uuid of arg-2%}-{feu.currXP.%uuid of arg-2%}
				message "{@debugPrefix} max: <yellow>%{feu.maxXP.%uuid of arg-2%}%"
				message "{@debugPrefix} curr: <yellow>%{feu.currXP.%uuid of arg-2%}%"
				message "{@debugPrefix} level: <yellow>%{feu.level.%uuid of arg-2%}%"
				message "{@debugPrefix} old max: <yellow>%{feu.oldMaxXP.%uuid of arg-2%}%"
				message "{@debugPrefix} And you need <yellow>%{_feu.XPtoNextLevel.%uuid of arg-2%}% <r>till next level"
			wait 1 tick
			execute console command "addxp %{_fixLvL}% %arg-2% false true"
		else:
			if {feu.level.%uuid of arg-2%} is not 1:
				set {_newMax} to {feu.maxXP.%uuid of arg-2%}-{feu.oldMaxXP.%uuid of arg-2%}
				set {_newCurr} to {feu.currXP.%uuid of arg-2%}-{feu.oldMaxXP.%uuid of arg-2%}
				set {_temp} to {_newCurr}/{_newMax}
			else:
				set {_temp} to {feu.currXP.%uuid of arg-2%}/{feu.maxXP.%uuid of arg-2%}
			set the arg-2's level progress to {_temp}
			if "%executor%" is not "CONSOLE":
				log "%executor% (perm: %{feu.permission.%uuid of player%}%) added %{_arg-1}% xp to %arg-2% (perm: %{feu.permission.%uuid of arg-2%}%)" to "players.log"
			{@debug}:
				set {_percent} to {_temp}*100
				set {_feu.XPtoNextLevel.%uuid of arg-2%} to {feu.maxXP.%uuid of arg-2%}-{feu.currXP.%uuid of arg-2%}
				message "{@debugPrefix} you are at %{_percent}%%%" to arg-2
				message "{@debugPrefix} And you need %{_feu.XPtoNextLevel.%uuid of arg-2%}% xp till next level" to arg-2
			if executor is a player:
				if arg-2 is not executor:
					message "{@prefix} %executor% gave you %{_arg-1}% XP!" to arg-2
				else:
					message "{@prefix} You gained %{_arg-1}% XP"

command /stats [<player=%player%>]:
	executable by: player
	trigger:
		if {feu.permission.%uuid of player%} is not "feu.player", "feu.mod", "feu.tech", "feu.admin" or "feu.op":
			message "{@err} You do not have permission for this command!"
			log "%executor%'s permission is wrong (%{feu.permission.%uuid of player%}%)" to "players.log"
			set {feu.permission.%uuid of player%} to "feu.player"
			stop
		else if {feu.permission.%uuid of player%} does not exist:
			message "{@err2} You need to have a permission"
			log "%executor%'s permission is wrong (%{feu.permission.%uuid of player%}%)" to "players.log"
			set {feu.permission.%uuid of player%} to "feu.player"
			stop
		set {_nextLVL} to {feu.maxXP.%uuid of arg-1%}-{feu.currXP.%uuid of arg-1%}
		set {_XPtoNextLevel} to {feu.maxXP.%uuid of arg-1%}-{feu.currXP.%uuid of arg-1%}
		if {feu.level.%uuid of arg-1%} is not 1:
			set {_newMax} to {feu.maxXP.%uuid of arg-1%}-{feu.oldMaxXP.%uuid of arg-1%}
			set {_newCurr} to {feu.currXP.%uuid of arg-1%}-{feu.oldMaxXP.%uuid of arg-1%}
			set {_percent} to {_newCurr}/{_newMax}*100
		else:
			set {_percent} to {feu.currXP.%uuid of arg-1%}/{feu.maxXP.%uuid of arg-1%}*100
		message "<yellow>------<gold>[<green>%arg-1%'s stats<gold>]<yellow>------"
		message "{@prefix} Current Level: <light green>%{feu.level.%uuid of arg-1%}%"
		if {feu.currXP.%uuid of arg-1%} is 0:
			message "{@prefix} Percent: <light green>0%%"
		else:
			message "{@prefix} Percent: <light green>%{_percent}%%%"
		message "{@prefix} Current XP: <light green>%round({feu.currXP.%uuid of arg-1%})% XP"
		message "{@prefix} XP needed for next level: <light green>%round({_XPtoNextLevel})% XP"
		message "{@prefix} Next level at: <light green>%round({feu.maxXP.%uuid of arg-1%})% XP"
		#message "You have totally killed %value of kill entity with entity zombie of player% zombies."
		#TODO STATS
		if {feu.permission.%uuid of player%} is not "feu.player":
			message "<yellow>---<gold>[<green>Additonal stats for staff<gold>]<yellow>---"
			message "{@prefix} Health: <light green>%health of arg-1%"
			message "{@prefix} Max health: <light green>%max health of arg-1%"
			message "{@prefix} Current Location: <light green>%location of arg-1%"
			message "{@prefix} Current gamemode: <light green>%gamemode of arg-1%"
			message "{@prefix} Godmode: <light green>%{feu.godMode.%uuid of arg-1%}%"

command /setMaxHealth <player>:
	executable by: console
	trigger:
		set {_mod5} to {feu.level.%uuid of arg-1%} mod 5
		if {_mod5} is equal to 0: #{feu.level.%uuid of arg-1%} is dividable by 5
			set {_new max health} to 3 + ({feu.level.%uuid of arg-1%}/5)
		else:
			set {_mod LVL} to {feu.level.%uuid of arg-1%} - {_mod5}
			set {_new max health} to 3 + ({_mod LVL}/5)

		set max health of arg-1 to {_new max health}*10
		set arg-1's scaled health to {_new max health}
		heal arg-1
		{@debug}:
			message "%max health of arg-1% | %(scaled health of player)/2%"
