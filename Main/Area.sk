options:
	debug: false
	
	#what world shall this script be enabled in?
	#usage:
	#enabledWorlds: "world" or "world_nether" or "world_the_end"
	enabledWorlds: "Feudalism_4" or "Feudalism_4_nether"
	
	buildingMaterials: stone, planks, wood or cobblestone
	
script options:
    $ developer mode
	
on place:
	player's world is {@enabledWorlds}
	block is pumpkin
	set {_blockLoooking} to location of player
	if {feu.setArea.%player%} is less than {feu.maxArea.%player%}:		
		message "<green>You have choosen a place to build!"
		Message "<green>To confirm click the sponge one more time the next 10 seconds"
		add 1 to {feu.setArea.%player%}
			
	else if {feu.setArea.%player%} is greater than {feu.maxArea.%player%}:
		message "<red>You can only have <gold>%{feu.maxArea.%player%}%<red> regions!"
		set block at block's location to air or snow layer
		give player a sponge
		stop
		
	else if {feu.setArea.%player%} is equal to {feu.maxArea.%player%}:
		message "<red>You can only have <gold>%{feu.maxArea.%player%}%<red> regions!"
		set block at block's location to air or snow layer
		give player a sponge
		stop
		
	else:
		set {feu.coordsSet.%player%} to false
		set {feu.blockClicked.%player%} to now
		set {feu.maxRadius.%player%} to 20
		set {feu.maxArea.%player%} to 1
		set {feu.setArea.%player%} to 1
	
command /maxRegions <integer> [<player=%player%>]:
	permission: feu.admin.setMaxRegions
	aliases: /mr, /fmr
	trigger:
		set {feu.maxArea.%arg-2%} to arg-1
		message "<green>Max areas are now <gold>%arg-1%<green> for <gold>%arg-2%"
					
	
command /testArea:
	aliases: /ta, fta
	permission: feu.tech.test
	trigger:
		add 1 to {test.runs}
		set {_center} to player's location
		block below {_center} is air:
			message "<red>You cannot create an area here! You need to stand on a solid block!"
			stop
		else:
			set block below {_center} to mossy cobblestone
		
		#NW
		set {_cornerNW} to location 10 blocks north west of {_center}
		set {_cornerNE} to location 10 blocks north east of {_center}
		set {_cornerSW} to location 10 blocks south west of {_center}
		set {_cornerSE} to location 10 blocks south east of {_center}
		set {_dir} to "NW"
		message ""
		message ""
		message "<green>Test run Nr: <gold>%{test.runs}%"
		message ""
		message ""
		message "<green>First direction set to <red>NW"
		set {run.%player%} to true
		
		while {run.%player%} is true:
			set {_dir%{_dir}%} to 1
			message "<gold>%{_dir}%: corner @ %{_corner%{_dir}%}%"
			block above {_corner%{_dir}%} is air or snow layer:
				message "<green>%{_dir}%: org block set to cobble"						
				while block {_dir%{_dir}%} blocks below {_corner%{_dir}%} is air or snow layer:
					add 1 to {_dir%{_dir}%}
				
				set {_orgLoc} to location {_dir%{_dir}%} blocks below {_corner%{_dir}%}
				
				set block {_dir%{_dir}%} blocks below {_corner%{_dir}%} to cobblestone
				remove 1 from {_dir%{_dir}%}
				set block {_dir%{_dir}%} blocks below {_corner%{_dir}%} to cobblestone
				remove 1 from {_dir%{_dir}%}
				set block {_dir%{_dir}%} blocks below {_corner%{_dir}%} to cobblestone
				
				set {_a} to true
				set {_newDir} to {_dir%{_dir}%}
				message "{_newDir} is %{_newDir}%"
				while {_a} is true:
					set {_newLocation} to location west of {_corner%{_dir}%}
					if block {_newDir} blocks below {_newLocation} isn't air or snow layer:
						remove 1 from {_newDir}
						set block {_newDir} blocks below {_corner%{_dir}%} to cobblestone
						message "<yellow>%{_dir}%: A block west spotted!"
						wait 1 tick
						set {_w} to false
					else:
						set {_w} to true
						
					set {_newLocation} to location north of {_corner%{_dir}%}	
					if block {_newDir} blocks below {_newLocation} isn't air or snow layer:
						remove 1 from {_newDir}
						set block {_newDir} blocks below {_corner%{_dir}%} to cobblestone
						message "<yellow>%{_dir}%: A block north spotted!"
						wait 1 tick
						set {_n} to false
					else:
						set {_n} to true
						
					set {_newLocation} to location south of {_corner%{_dir}%}			
					if block {_newDir} blocks below {_newLocation} isn't air or snow layer:
						remove 1 from {_newDir}
						set block {_newDir} blocks below {_corner%{_dir}%} to cobblestone
						message "<yellow>%{_dir}%: A block south spotted!"
						wait 1 tick
						set {_s} to false
					else:
						set {_s} to true
						
					set {_newLocation} to location east of {_corner%{_dir}%}			
					if block {_newDir} blocks below {_newLocation} isn't air or snow layer:
						remove 1 from {_newDir}
						set block {_newDir} blocks below {_corner%{_dir}%} to cobblestone
						message "<yellow>%{_dir}%: A block east spotted!"
						wait 1 tick
						set {_e} to false
					else:
						set {_e} to true
						
					if {_w} and {_n} and {_s} and {_e} is true:
						set {_a} to false
						message "&d%{_dir}%: Block checking loop ended!" 
					#Message "<green>%{_dir}%: Block set %{_dir%{_dir}%}% above %{_corner%{_dir}%}% to cobblestone"
				wait 1 tick
						
			else:
				message "<red>{_corner%{_dir}%} is underground, trying to find the surface block"
				while block {_dir%{_dir}%} blocks above {_corner%{_dir}%} isn't air or snow layer:
					add 1 to {_dir%{_dir}%}
					message "<yellow>%{_dir}%: added 1 to {_dir%{_dir}%} (%{_dir%{_dir}%}%)"
					
				set {_orgLoc} to location {_dir%{_dir}%} blocks above {_corner%{_dir}%}
				
				set block {_dir%{_dir}%} blocks above {_corner%{_dir}%} to cobblestone
				add 1 to {_dir%{_dir}%}
				set block {_dir%{_dir}%} blocks above {_corner%{_dir}%} to cobblestone						

				set {_a} to true
				set {_newDir} to {_dir%{_dir}%}
				message "{_newDir} is %{_newDir}%"
				while {_a} is true:
					set {_newLocation} to location west of {_corner%{_dir}%}
					if block {_newDir} blocks above {_newLocation} isn't air or snow layer:
						add 1 to {_newDir}
						set block {_newDir} blocks above {_corner%{_dir}%} to cobblestone
						message "<yellow>%{_dir}%: A block west spotted!"
						wait 1 tick
						set {_w} to false
					else:
						set {_w} to true
					set {_newLocation} to location north of {_corner%{_dir}%}	
					if block {_newDir} blocks above {_newLocation} isn't air or snow layer:
						add 1 to {_newDir}
						set block {_newDir} blocks above {_corner%{_dir}%} to cobblestone
						message "<yellow>%{_dir}%: A block north spotted!"
						wait 1 tick
						set {_n} to false
					else:
						set {_n} to true
					
					set {_newLocation} to location south of {_corner%{_dir}%}			
					if block {_newDir} blocks above {_newLocation} isn't air or snow layer:
						add 1 to {_newDir}
						set block {_newDir} blocks above {_corner%{_dir}%} to cobblestone
						message "<yellow>%{_dir}%: A block south spotted!"
						wait 1 tick
						set {_s} to false
					else:
						set {_s} to true						
					
					set {_newLocation} to location east of {_corner%{_dir}%}			
					if block {_newDir} blocks above {_newLocation} isn't air or snow layer:
						add 1 to {_newDir}
						set block {_newDir} blocks above {_corner%{_dir}%} to cobblestone
						message "<yellow>%{_dir}%: A block east spotted!"
						wait 1 tick
						set {_e} to false
					else:
						set {_e} to true
						
					if {_w} and {_n} and {_s} and {_e} is true:
						set {_a} to false
						message "&d%{_dir}%: Block checking loop ended!" 
					#Message "<green>%{_dir}%: Block set %{_dir%{_dir}%}% above %{_corner%{_dir}%}% to cobblestone"
				wait 1 tick
			if {_dir} isn't "NW":
				set {_away} to 1
				set {_up} to 1
				set {_Down} to 1
				while {_wallBuilding} is true:
					if {_dir} is "SE":
						set {_newLoc} to location {_away} blocks east of {_orgLoc}
						if block {_away} blocks east of {_orgLoc} is air:
							set block {_away} blocks east of {_orgLoc} to cobble
							add 1 to {_away}
						else if block {_up} blocks above {_newLoc} isn't air:
							set block {_up} blocks above {_newLoc} to cobble
							add 1 to {_up}
						else if block {_Down} blocks above {_newLoc} is air:
							set block {_Down} blocks above {_newLoc} to cobble
								
			set {_Old.%{_dir}%.Dir} to {_orgLoc}
			
			if {_dir} is "NW":
				set {_dir} to "NE"
				message "<gold>Switching direction!"
			else if {_dir} is "NE":
				message "<gold>Switching direction!"
				set {_dir} to "SE"
			else if {_dir} is "SE":
				message "<gold>Switching direction!"
				set {_dir} to "SW"
			else if {_dir} is "SW":
				set {run.%player%} to false
				message "<gold>Ending loop!"
			else:
				message "<red>Something went wrong! @ Area.sk switching direction"
				stop
			message "<green>New direction is <red>%{_dir}%"
			
		message "<green>Command executed without any errors!"
		message "Second test initiated"
		player's x-coordinate is greater than {_cornerNW}
		message "1"
		player's x-coordinate is less than {_cornerNE}
		message "2"
		player's z-coordinate is less than {_cornerSW}
		message "3"
		player's z-coordinate is greater than {_cornerSE}
		message "Works!"

		
		
command /diecobble:
	permission: feu.tech.dieCobble
	aliases: /dc, /fdc
	trigger:
		set {_location} to player's location
		set {_count} to 0
		loop blocks in radius 50 around {_location}:
			loop-block is cobblestone:
				add 1 to {_count}
				set loop-block to air
			else if loop-block is mossy cobblestone:
				add 1 to {_count}
				set loop-block to dirt		
			else:
				#Warning: LAG
				{@debug} is true
				add 1 to {_debugCount}
				message "count: %{_count}%"
				message "loop-block nr: %{_debugCount}%"
		message "Removed %{_count}% blocks"

command /test:
	permission: feu.tech.test2
	trigger:
	#	set {_newDir} to 
		set block {_newDir} above {_corner%{_dir}%} to cobblestone

on place:
	block is door
	player's world is {@enabledWorlds}
	block below block isn't note block:
		message "You have to do this in a doorframe! On a note block!"
		cancel event
	
	

#TODO: create a menu on what you want to do!
on click:
	player's world is {@enabledWorlds}
	block is pumpkin:
		message "mellow ^^"
	else if block is door:
		player is holding a sign:
			the block in front of the player's eyes is door
			message "%{_looking}%"
		else:
			message "<red>You have to hold a key to unlock this door!(sign)"
			cancel event
	else if block is note block:
		player is holding a door:
			cancel event
			set block above block to door
			remove 1 door from player
			player is sneaking:
				message "<yellow>You don't have to sneak to place a door in a door frame :P"
			message "<light green>You successfully placed a door!"
			set {area.key1.%location above block%} to a random integer between 0 and 9
			set {area.key2.%location above block%} to a random integer between 0 and 9
			set {area.key3.%location above block%} to a random integer between 0 and 9
			set {area.key4.%location above block%} to a random integer between 0 and 9
			message "<green>The key to the door is: <gold>%{area.key1.%location above block%}%%{area.key2.%location above block%}%%{area.key3.%location above block%}%%{area.key4.%location above block%}%"
	else if player is holding a wooden hoe named "Doorway":
		cancel event
		distance between target block and player is greater than 4:
			message "blocks too far away!"
			stop
		set {_orgt} to target block's location
		set block at {_orgt} to piston
		set {_t} to {_orgt}
		set {_newt} to 0
		while {_newt} is less than 4:
			set {_t} to location {_newt} above {_orgt}
			if {_newt} is 3:
				set block at {_t} to oak planks
			set block east {_t} to oak planks
			set block 2 east {_t} to oak planks
			set block west {_t} to oak planks
			set block 2 west {_t} to oak planks
			add 1 to {_newt}
	else if player is holding a wooden hoe named "Wall":
		cancel event
		distance between target block and player is greater than 4:
			message "blocks too far away!"
			stop
		set {_orgt} to target block's location
		set {_t} to {_orgt}
		set {_newt} to 0
		set block at {_orgt} to piston
		while {_newt} is less than 4:
			set {_t} to location {_newt} above {_orgt}
			set block at {_t} to oak planks
			set block east {_t} to oak planks
			set block 2 east {_t} to oak planks
			set block west {_t} to oak planks
			set block 2 west {_t} to oak planks
			add 1 to {_newt}
	else if player is holding a wooden hoe named "Floor":
		cancel event
		distance between target block and player is greater than 4:
			message "blocks too far away!"
			stop
		set {_orgt} to target block's location
		set {_t} to {_orgt}
		set {_newt} to 0
		
		while {_newt} is less than 3:
			set {_t} to location {_newt} south {_orgt}
			set block at {_t} to oak planks
			set block east {_t} to oak planks
			set block 2 east {_t} to oak planks
			set block west {_t} to oak planks
			set block 2 west {_t} to oak planks
			add 1 to {_newt}
		set {_newt} to 1
		while {_newt} is less than 3:
			set {_t} to location {_newt} north {_orgt}
			set block at {_t} to oak planks
			set block east {_t} to oak planks
			set block 2 east {_t} to oak planks
			set block west {_t} to oak planks
			set block 2 west {_t} to oak planks
			add 1 to {_newt}	
		set block at {_orgt} to oak wood	
command /hoes <text> <text>:
	usage: /hoes <wood|w|stone|s|iron|i> <name>
	permission: feu.mod.SpawnHose
	trigger:
		if arg-1 is "w" or "wood" or "wooden":
			give player a wooden hoe named "%arg-2%"
		else if arg-1 is "stone" or "s":
			give player a stone hoe named "%arg-2%"
		else if arg-1 is "iron" or "i":
			give player an iron hoe named "%arg-2%"
		else:
			message "Wrong argument!"
			stop
		message "You now have a hoe!"
#TODO: Remove the region
on break:
	player's world is {@enabledWorlds}
	block is pumpkin:
		if {feu.area.pumpkin.%block's location%} exists:
			if {feu.area.pumpkin.%block's location%} is player's name:
				Message "<green>You have removed this region"
				remove 1 from {feu.setArea.%player%}
			else:
				Message "<red>You cannot remove other player's areas!" #or "<green>You have damaged this house's nexus by 1"
	else if block is door:
		player is holding a sign:
			if block below block is door: 
				#message "below is door"
				#message "%{area.key1.%location below block%}%%{area.key2.%location below block%}%%{area.key3.%location below block%}%%{area.key4.%location below block%}%"
				delete {area.key1.%location below block%}
				delete {area.key2.%location below block%}
				delete {area.key3.%location below block%}
				delete {area.key4.%location below block%}
				#message "%{area.key1.%location below block%}%%{area.key2.%location below block%}%%{area.key3.%location below block%}%%{area.key4.%location below block%}%"
			else:
				#message "%{area.key1.%location of block%}%%{area.key2.%location of block%}%%{area.key3.%location of block%}%%{area.key4.%location of block%}%"
				delete {area.key1.%location of block%}
				delete {area.key2.%location of block%}
				delete {area.key3.%location of block%}
				delete {area.key4.%location of block%}
				#message "%{area.key1.%location of block%}%%{area.key2.%location of block%}%%{area.key3.%location of block%}%%{area.key4.%location of block%}%"
			give player a wood door

