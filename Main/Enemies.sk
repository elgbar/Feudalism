options:
	debug: false
	
	prefix: <gold>[&aFeudalism<gold>]<r>
	warn: <gold>[&aFeudalism<gold>] <yellow>WARNING:<light red>
	err: <gold>[&aFeudalism<gold>] <red>ERROR:<light red>
	
#Commands	
command /spawnCostumsZombies <integer> <text="Zombie"> [<text="default">] [<text="default">]:
	usage: scz <level> <name (use '_' for space)> [<leather|chain|iron|gold|diamond|none>]  [<wooden|stone|iron|gold|diamond|none>]#arg-2 is what type of armour should be equipped AND arg-3 is weapon type
	aliases: scz
	trigger:
		if "%name of player%" is "<none>":
			set {_console} to true
		if {_console} is true:
			message "" to player
		else if {feu.permission.%name of player%} isn't "feu.mod", "feu.tech", "feu.admin" or "op":
			message "{@err} You do not have permission for this command!"
			stop
		else if {feu.permission.%name of player%} doesn't exist:
			message "{@err} Permission error!"
			set {feu.permission.%name of player%} to "feu.player"
			stop
			
		#General
		spawn a zombie north of the player
		set metadata value "ID" of last spawned entity to "SCZ"
		set metadata value "Level" of last spawned entity to "%arg-1%"
		wait 1 tick
		set age of event-entity to adult
		set {_name} to arg-2
		replace all "_" with " " in {_name} 
		set the name of last spawned entity to "%{_name}%"
		set metadata value "Level" of last spawned entity to arg-1
		#Armour
		
		if arg-2 is "leather":
			equip last spawned entity with all leather armour
		else if arg-3 is "chain":
			equip last spawned entity with all chain armour
		else if arg-3 is "iron":
			equip last spawned entity with all iron armour
		else if arg-3 is "gold":
			equip last spawned entity with all gold armour	
		else if arg-3 is "diamond":
			equip last spawned entity with all diamond armour
		else if arg-3 is "none" or "default":
			set helmet slot of last spawned entity to air
			set chestplate slot of last spawned entity to air
			set legging slot of last spawned entity to air
			set boots slot of last spawned entity to air
			if arg-3 is "default":
				message "{@warn} The entity is spawned with no armour!"
		else:
			message "{@err} Argument 3 (armour) is wrong!"
			kill last spawned entity			
			stop
		#Weapon	
			
		if arg-4 is "wooden":
			set tool of the last spawned entity to a wooden sword
		else if arg-4 is "stone":
			set tool of the last spawned entity to a stone sword	
		else if arg-4 is "iron":
			set tool of the last spawned entity to a iron sword	
		else if arg-4 is "gold":
			set tool of the last spawned entity to a gold sword
		else if arg-4 is "diamond":
			set tool of the last spawned entity to a diamond sword
		else if arg-4 is "none" or "default":
			set tool of the last spawned entity to air
			if arg-4 is "default":
				message "{@warn} The entity is spawned with no arms!"
		else:
			message "{@err} Argument 4 (arms) is wrong!"
			kill last spawned entity			
			stop	
			
		#Health	
		set {_arg} to arg-1
		set {_health} to 20+{_arg}^1.5
		{@debug} is true:
			message "{@prefix} Health of ""%arg-2%"" is <light green>%{_health}%"
		set the maximum health of the last spawned entity to {_health}
		set health of the last spawned entity to {_health}
		
command /setFixedZombieSpawn <integer> <text> <text> [<integer=4>]:# [<integer=0.2>]:
	usage: /sfzs <level> <Armour> <weapon> [<return to spawn distance>] #[<speed (from -1 to 1>]
	aliases: sfzs
	trigger:
		if "%name of player%" is "<none>":
			set {_console} to true
		if {_console} is true:
			message "" to player
		else if {feu.permission.%name of player%} isn't "feu.tech", "feu.admin" or "op":
			message "{@err} You do not have permission for this command!"
			stop
		else if {feu.permission.%name of player%} doesn't exist:
			message "{@err} Permission error!"
			set {feu.permission.%name of player%} to "feu.player"
			stop
			
		if block below player is air:
			message "{@err} Cannot spawn zombies in air!"
			stop
		if arg-1 is less than 0:
			message "{@err} You cannot set the level to less than 1."
			stop
		else if arg-1 is greater than 1000:
			message "{@err} An entity cannot be higher than level 1000!"
			stop
			
		if arg-2 isn't "leather", "chain", "iron", "gold", "diamond", "none" or "air":
			message "{@err} An entity cannot equip that type of armour!"
			stop
			
		if arg-3 isn't "wood", "wooden", "stone", "iron", "gold", "diamond", "air" or "none":
			message "{@err} An entity cannot hold that kind of weapon!"
			stop
		if arg-4 is less than 1:
			message "{@err} You cannot set that to negative or zero."
			stop
		set {_round Coords} to location of player
		set {_x} to x coordinate of {_round Coords}
		set {_y} to y coordinate of {_round Coords}
		set {_z} to z coordinate of {_round Coords}
		set x coordinate of {_round Coords} to floor({_x})+0.5
		set y coordinate of {_round Coords} to floor({_y})+0.5
		set z coordinate of {_round Coords} to floor({_z})+0.5
		
		
		add {_round Coords} to {feu.fixedspawn::*}
		set block below player to iron block
		
		set {feu.fixedspawn.lvl.%{_round Coords}%} to arg-1
		set {feu.fixedspawn.armour.%{_round Coords}%} to arg-2
		set {feu.fixedspawn.weapon.%{_round Coords}%} to arg-3
		set {feu.returnToSpawn.weapon.%{_round Coords}%} to arg-4
		
		add 1 to {feu.fixedspawnID}
		set {feu.fixedspawn.ID.%{_round Coords}%} to {feu.fixedspawnID}
		set {feu.fixedspawn.isSpawned.%{feu.fixedspawn.ID.%{_round Coords}%}%} to false
		message "LvL %arg-1% (ID: %{feu.fixedspawn.ID.%{_round Coords}%}%) zombie with %arg-2% armour and %arg-3% sword will spawn here!"
	
command /removeAllFixedSpawns:
	aliases: rafs
	executable by: console
	trigger:		
		loop {feu.fixedspawn::*}:
			delete {feu.fixedspawn.lvl.%loop-value%}
			delete {feu.fixedspawn.armour.%loop-value%}
			delete {feu.fixedspawn.weapon.%loop-value%}
			delete {feu.fixedspawn.ID.%loop-value%}
			delete {feu.fixedspawn.isSpawned.%loop-value%}
			delete {feu.returnToSpawn.weapon.%loop-value%}			
		delete {feu.fixedspawn::*}
		delete {feu.fixedspawnID}
		execute console command "killall"
		message "done!"
		
command /removeFixedSpawns:	
	aliases: rfs
	trigger:
		if "%name of player%" is "<none>":
			#Not a console command
			stop
		else if {feu.permission.%name of player%} isn't "feu.tech", "feu.admin" or "op":
			message "{@err} You do not have permission for this command!"
			stop
		else if {feu.permission.%name of player%} doesn't exist:
			message "{@err} Permission error!"
			set {feu.permission.%name of player%} to "feu.player"
			stop
			
		set {_round Coords} to location of player
		set {_x} to x coordinate of {_round Coords}
		set {_y} to y coordinate of {_round Coords}
		set {_z} to z coordinate of {_round Coords}
		set x coordinate of {_round Coords} to floor({_x})+0.5
		set y coordinate of {_round Coords} to floor({_y})+0.5
		set z coordinate of {_round Coords} to floor({_z})+0.5
		if {feu.returnToSpawn.weapon.%{_round Coords}%} exists:
			#remove {feu.fixedspawn::%{_round Coords}%}
			
			delete {feu.fixedspawn.lvl.%{_round Coords}%}
			delete {feu.fixedspawn.armour.%{_round Coords}%}
			delete {feu.fixedspawn.weapon.%{_round Coords}%}
			delete {feu.fixedspawn.ID.%{_round Coords}%}
			delete {feu.fixedspawn.isSpawned.%{_round Coords}%}				
			delete {feu.returnToSpawn.weapon.%{_round Coords}%}	
			
			remove {_round Coords} from {feu.fixedspawn::*}
			message "done!"
			block below player is iron block
			set block below player to grass
		else:
			message "No spawn here!"

command /fixAllZombieSpawns:
	usage: fzs <ID>
	aliases: fzs
	trigger:
		if "%name of player%" is "<none>":
			set {_console} to true
		if {_console} is true:
			message "" to player
		else if {feu.permission.%name of player%} isn't "feu.admin" or "op":
			message "{@err} You do not have permission for this command!"
			stop
		else if {feu.permission.%name of player%} doesn't exist:
			message "{@err} Permission error!"
			set {feu.permission.%name of player%} to "feu.player"
			stop
			
		clear {_nr}
		loop {feu.fixedspawnID} times:
			add 1 to {_nr}
			set {feu.fixedspawn.isSpawned.%{_nr}%} to false
		message "done!"
			
			
command /fixZombieSpawns <integer>:
	usage: fzs <ID>
	aliases: fzs
	trigger:
		if "%name of player%" is "<none>":
			set {_console} to true
		if {_console} is true:
			message "" to player
		else if {feu.permission.%name of player%} isn't "feu.mod", "feu.tech", "feu.admin" or "op":
			message "{@err} You do not have permission for this command!"
			stop
		else if {feu.permission.%name of player%} doesn't exist:
			message "{@err} Permission error!"
			set {feu.permission.%name of player%} to "feu.player"
			stop
			
		if {feu.fixedspawn.isSpawned.%arg-1%} exists:
			set {feu.fixedspawn.isSpawned.%arg-1%} to false
			message "done!"
		else:
			message "No variable here!"			
			
command /checkZombieSpawns <integer>:
	aliases: czs <ID>
	trigger:
		if "%name of player%" is "<none>":
			set {_console} to true
		if {_console} is true:
			message "" to player
		else if {feu.permission.%name of player%} isn't "feu.tech", "feu.admin" or "op":
			message "{@err} You do not have permission for this command!"
			stop
		else if {feu.permission.%name of player%} doesn't exist:
			message "{@err} Permission error!"
			set {feu.permission.%name of player%} to "feu.player"
			stop
			
		if {feu.fixedspawn.isSpawned.%arg-1%} exists:
			message "%{feu.fixedspawn.isSpawned.%arg-1%}%"
		else:
			message "No variable here!"	
#Events
every 3 second in world "Feudalism_4":
	loop {feu.fixedspawn::*}:
		spawn a witch 3 below loop-value
		delete last spawned entity
		loop entities in radius 22 around last spawned entity:
			loop-entity is a zombie
			set {_ID} to metadata value "ID" of last spawned entity
			if "%{_ID}%" is "%{feu.fixedspawn.ID.%loop-value-1%}%":
				if loop-entity's target is a player:
					distance between loop-entity and loop-value-1 is greater than {feu.fixedspawn.ID.%loop-value-1%}
					make loop-entity pathfind to loop-value-1 with speed 1.5
					set {feu.running.%{feu.fixedspawn.ID.%loop-value%}%} to true
					message "running to true" to console
					stop
				else if distance between loop-entity and loop-value-1 is greater than 14:
					make loop-entity pathfind to loop-value-1 with speed 2
					message "too far from home" to console
					stop
				else if {feu.running.%{feu.fixedspawn.ID.%loop-value%}%} is true:
					set {feu.running.%{feu.fixedspawn.ID.%loop-value%}%} to false
					message "running to false" to console
					stop
every 15 second in world "Feudalism_4":
	#stop
	if {feu.disable.enemies} is true:
		message "{@warn} Zombie Spawning disabled!" to console
		stop
	wait 5 ticks
	loop {feu.fixedspawn::*}:
		{@debug} is true:
			message "%loop-index-1% | test 1 | %loop-value%" to console
		spawn a witch 3 below loop-value
		delete last spawned entity
		set {_players} to 0
		set {_index} to loop-index-1
		set {_location} to loop-value-1
		loop players in radius 20 around last spawned entity:
			add 1 to {_players}
			set {_loop-1} to loop-value
			{@debug} is true:
				message "%loop-index-1% | test 2 | players: %{_players}%" to console	
			if {_players} is greater than 0:
				if {feu.fixedspawn.isSpawned.%{feu.fixedspawn.ID.%loop-value-1%}%} is false:
					{@debug} is true:
						message "%loop-index-1% | Spawning a zombie" to console
					spawn a zombie at loop-value-1
					set {feu.fixedspawn.isSpawned.%{feu.fixedspawn.ID.%loop-value-1%}%} to true
					wait 2 ticks
					set age of last spawned entity to adult
					set metadata value "ID" of last spawned entity to "%{feu.fixedspawn.ID.%loop-value-1%}%"
					set metadata value "Level" of last spawned entity to "%{feu.fixedspawn.lvl.%loop-value-1%}%"
					set the name of last spawned entity to "LvL %{feu.fixedspawn.lvl.%loop-value-1%}% Zombie"					
					
					if {feu.fixedspawn.armour.%loop-value-1%} is "leather":
						equip last spawned entity with all leather armour			
					else if {feu.fixedspawn.armour.%loop-value-1%} is "chain":
						equip last spawned entity with all chain armour
					else if {feu.fixedspawn.armour.%loop-value-1%} is "iron":
						equip last spawned entity with all iron armour
					else if {feu.fixedspawn.armour.%loop-value-1%} is "gold":
						equip last spawned entity with all gold armour	
					else if {feu.fixedspawn.armour.%loop-value-1%} is "diamond":
						equip last spawned entity with all diamond armour
					else if {feu.fixedspawn.armour.%loop-value-1%} is "none" or "air":
						set the helmet of the last spawned entity to air
						set the chestplate of the last spawned entity to air
						set the leggings of the last spawned entity to air
						set the boots of the last spawned entity to air
					else:
						message "{@err} An error was retuned from auto spawn at %loop-value-1%: <yellow>Wrong argument! <light red>The entity is spawned with no armour! " to console
			
					#Weapon	
			
					if {feu.fixedspawn.weapon.%loop-value-1%} is "wooden" or "wood":
						set tool of the last spawned entity to a wooden sword
					else if {feu.fixedspawn.weapon.%loop-value-1%} is "stone":
						set tool of the last spawned entity to a stone sword	
					else if {feu.fixedspawn.weapon.%loop-value-1%} is "iron":
						set tool of the last spawned entity to a iron sword	
					else if {feu.fixedspawn.weapon.%loop-value-1%} is "gold":
						set tool of the last spawned entity to a gold sword
					else if {feu.fixedspawn.weapon.%loop-value-1%} is "diamond":
						set tool of the last spawned entity to a diamond sword
					else if {feu.fixedspawn.weapon.%loop-value-1%} is "none" or "air":
						set tool of the last spawned entity to air
					else:
						message "{@err} An error was retuned from auto spawn at %loop-value-1%: <red>Wrong argument! <light red>The entity is spawned with no arms!" to console

					set {_health} to floor((16.09*{feu.fixedspawn.lvl.%loop-value-1%}^0.38)/2)
					set the maximum health of the last spawned entity to {_health}
					wait 2 tick
					set health of the last spawned entity to {_health}
					#execute console command "spawnCostumsZombies %{feu.fixedspawn.lvl.%loop-value-1%}% %{feu.fixedspawn.armour.%loop-value-1%}% %{feu.fixedspawn.weapon.%loop-value-1%}%"	
				else:
					clear {_ID}
					loop entities in radius 20 around last spawned entity:
						set {_ID} to metadata value "ID" of loop-entity-2
						#message "ID: %{_ID}% Name: %name of loop-entity-2%" to console
						if "%{_ID}%" isn't equal to "<none>":	
							#message "not none" to console
							if "%{_ID}%" is equal to "%{feu.fixedspawn.ID.%loop-value-1%}%":
								if  distance between loop-entity-2 and loop-value-1 is bigger than {feu.returnToSpawn.weapon.%loop-value-1%}:
									make loop-entity-2 pathfind to loop-value-1 with speed 2
									{@debug} is true:
										message "%loop-index-1% | Making zombie run to its spawn" to console	
								else:
									{@debug} is true:
										message "%loop-index-1% | A zombie is already spawned" to console						
		if {_players} is 0:
			loop entities in radius 20 around last spawned entity:
				if {feu.fixedspawn.isSpawned.%{feu.fixedspawn.ID.%{_location}%}%} is true:
					wait 3 ticks
					delete loop-entity
					set {feu.fixedspawn.isSpawned.%{feu.fixedspawn.ID.%{_location}%}%} to false
					{@debug} is true:
						message "%{_index}% | No player in sight! Killing zombie." to console
						wait 5 tick
						loop-entity is dead:
							message "%{_index}% | Dead!" to console