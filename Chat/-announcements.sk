#
#WARNING: This script is no where finished and you should NOT enable it!
#

options:
	debug: false
	
	prefix: <gold>[&aFeudalism<gold>]<r>
	officialAnnouncements: <gold>[&aAnnouncement<gold>]<r>
	debugPrefix: <gold>[<yellow>Debug<gold>]<r>
	
	warn: <gold>[&aFeudalism<gold>] <yellow>WARNING:<light red>
	err: <gold>[&aFeudalism<gold>] <red>ERROR:<light red>
	
#Commands:
command /announcement <text> [<text>]:
	aliases: /ann
	usage: /ann <add|remove|list> [<message|ID>]
	trigger:
		if arg-1 is "add":
			if arg-2 exists:
				add arg-2 to {feu.announcements.message::*}
				message "{@prefix} You message will now be played every ten minutes"
			else:
				message "{@err} You need a second variable!"				
		else if arg-1 is "remove", "rem", "delete" or "del":
			if arg-2 exists:
				if {feu.announcements.message::%arg-2%} exists:
					#add arg-2 to {feu.announcements.doNotRead::*}
					clear {feu.announcements.message::%arg-2%}
					message "{@prefix} Announcement removed!"				
				else:
					message "{@err} There are no announcement with that ID. Do ""/ann list"""
			else:
				message "{@err} You need an ID as a second variable!"
		else if arg-1 is "list" or "show":
			if {feu.announcements.message::*} exists:
				loop {feu.announcements.message::*}:
					message "<yellow>ID: <light green>%loop-index% <r>| <yellow> Message: <light green>%loop-value%"
					add 1 to {_nr}
			else:
				message "{@warn} There are no messages."
		else:
			message "usage: /ann <add|remove|list> [<message|ID>]"
				
#Periodical announcements:
#every 100 seconds: #10 minutes:
	#stop
command /l:
	trigger:
	#if {feu.announcements.periodical} is true:
		if {feu.announcements.message::%{feu.announcements.nr}%} exists:
			message "{@officialAnnouncements} %{feu.announcements.nr}%: %{feu.announcements.message::%{feu.announcements.nr}%}%" to all players in world "Feudalism_4"	
		else:
			set {_does not exist} to true
		set {_size} to size of {feu.announcements.message::*}		
		if {_does not exist} is true:
			
			if {_size} is greater than {feu.announcements.nr}:
				message "true" to console
				set {feu.announcements.nr} to 1
			else if {_size} is equal to {feu.announcements.nr}:
				message "true 2" to console
			
		else:
			add 1 to {feu.announcements.nr}
		
		message "total: %{_size}% & loop nr: %{feu.announcements.nr}%" to console	
			
			
			
		stop	
			
			
			
		if {feu.announcements.message::6} exists:
			message "exists" to console
		else:
			message "dont" to console
		#Update ann nr	
		set {_size} to size of {feu.announcements.message::*}	
		set {_next nr} to {feu.announcements.nr} + 1
		
		if {feu.announcements.nr} is greater than {_size}:
			message "1" to console
			set {feu.announcements.nr} to 1		
	#	else if {feu.announcements.nr} is equal to {_size}:
	#		message "2" to console
	#		set {feu.announcements.nr} to 1			
		else if "%{feu.announcements.message::%{_next nr}%}%" is "<none>":
			message "3" to console
			#stop
			set {_temp} to {feu.announcements.nr}
			loop 2 times:#{_size} times:
				if "%{feu.announcements.message::%loop-value%}%" is "<none>":
					add 1 to {_temp}
			if {_temp} is equal to {feu.announcements.nr}:
				set {feu.announcements.nr} to 1
			else:
				set {feu.announcements.nr} to {_temp}
				
		else:		
			message "4" to console
			add 1 to {feu.announcements.nr}
			
		
		stop
		#this is old
		if size of {feu.announcements.message::*} is larger than {feu.announcements.nr}:
			set {feu.announcements.nr} to 1		
		else:
			set {_nr 2} to {feu.announcements.nr}
			message "before %{_nr 2}%" to console
			set {_before} to now
			while {feu.announcements.message::%{_nr 2}%} doesn't exist:
				add 1 to {_nr 2}
				message "%{_nr 2}%" to console
				set {_time} to difference between {_before} and now
				if {_time} is greater than 2 seconds:
					stop
			set {feu.announcements.nr} to {_nr 2}
